<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NBMA</title>
  
  <subtitle>学习 记录 分享</subtitle>
  <link href="http://nbma.info/atom.xml" rel="self"/>
  
  <link href="http://nbma.info/"/>
  <updated>2023-01-03T15:23:18.463Z</updated>
  <id>http://nbma.info/</id>
  
  <author>
    <name>Mansur</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>收集来的一些公司的IP范围</title>
    <link href="http://nbma.info/ip-range-of-some-corp/"/>
    <id>http://nbma.info/ip-range-of-some-corp/</id>
    <published>2022-12-27T03:49:03.000Z</published>
    <updated>2023-01-03T15:23:18.463Z</updated>
    
    <content type="html"><![CDATA[<p>作用未知，纯粹好玩</p><span id="more"></span><h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><p>早期google并没有公开自己对外提供服务的ip，前段时间看应该是更新了，可以直接通过下面这个url获取：</p><p><a href="https://www.gstatic.com/ipranges/goog.json">https://www.gstatic.com/ipranges/goog.json</a></p><h2 id="亚马逊AWS"><a href="#亚马逊AWS" class="headerlink" title="亚马逊AWS"></a>亚马逊AWS</h2><p>作为最大的云计算公司，亚马逊还是很给力的，他的IP范围在上面的网址中也有，另外它官方也公布了每个region的ip段：</p><p><a href="https://ip-ranges.amazonaws.com/ip-ranges.json">https://ip-ranges.amazonaws.com/ip-ranges.json</a></p><h2 id="微软Azura"><a href="#微软Azura" class="headerlink" title="微软Azura"></a>微软Azura</h2><p>同样微软也公开了自己的数据中心的IP范围，官网可以下载：<br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=41653">https://www.microsoft.com/en-us/download/details.aspx?id=41653</a></p><p>另外Azura中国区是世纪互联运营，不含在全球版里的ip：</p><p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=42064">https://www.microsoft.com/en-us/download/details.aspx?id=42064</a></p><h2 id="line"><a href="#line" class="headerlink" title="line"></a>line</h2><p>基于业务需求，公司需要访问line，所以找了下这个公司的IP范围，然后发现了两个很有意思的网址</p><p><a href="https://host.io/linecorp.com">https://host.io/linecorp.com</a></p><p>host.io可以查询域名所在的公司，已经对应的AS</p><p><a href="https://ipinfo.io/AS38631">https://ipinfo.io/AS38631</a></p><p>ipinfo.io可以查询AS对应的公司和包含的IPv4/IPv6范围</p><h2 id="其他公司"><a href="#其他公司" class="headerlink" title="其他公司"></a>其他公司</h2><p>参照Google，我是从<a href="http://as.chacuo.net/company">这个网站</a>拿到的IP子网的范围。<br>格式例如这样的，写了子网的第一个地址和最后一个地址，但是没写掩码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">64.18.0.0 64.18.15.255</span><br><span class="line">207.126.144.0 207.126.159.255</span><br><span class="line">104.132.0.0 104.132.27.255</span><br></pre></td></tr></table></figure><p>先拿excel简单处理下原数据，排序之后，然后拿python简单处理下得到网络号和掩码，人肉过滤下重复的子网。</p><p>python的netaddr和ipaddr可以直接处理IP，我这里用是python3内置的ipaddresss。summarize_address_range(ip1,ip2)会输出包含ip1起始到ip2这个范围内的所有子网。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ipaddress <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;ipi&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            ip_list = line.split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            ip1 = IPv4Address(ip_list[<span class="number">0</span>])</span><br><span class="line">            ip2 = IPv4Address(ip_list[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> summarize_address_range(ip1,ip2):</span><br><span class="line">                print(x)</span><br></pre></td></tr></table></figure><p>最终结果不一定就完全准确，但是覆盖80%的业务应该可以吧。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">8.6.48.0&#x2F;21</span><br><span class="line">8.8.4.0&#x2F;24</span><br><span class="line">8.8.8.0&#x2F;24</span><br><span class="line">8.15.202.0&#x2F;24</span><br><span class="line">8.34.208.0&#x2F;20</span><br><span class="line">8.35.192.0&#x2F;20</span><br><span class="line">12.216.80.0&#x2F;24</span><br><span class="line">23.228.128.0&#x2F;18</span><br><span class="line">23.236.48.0&#x2F;20</span><br><span class="line">23.251.128.0&#x2F;19</span><br><span class="line">23.255.128.0&#x2F;17</span><br><span class="line">34.64.0.0&#x2F;10</span><br><span class="line">35.184.0.0&#x2F;13</span><br><span class="line">35.192.0.0&#x2F;11</span><br><span class="line">35.224.0.0&#x2F;12</span><br><span class="line">35.240.0.0&#x2F;13</span><br><span class="line">35.206.0.0&#x2F;15</span><br><span class="line">35.208.0.0&#x2F;12</span><br><span class="line">38.97.108.0&#x2F;24</span><br><span class="line">45.121.228.0&#x2F;22</span><br><span class="line">45.56.0.0&#x2F;18</span><br><span class="line">63.243.168.0&#x2F;22</span><br><span class="line">64.15.112.0&#x2F;20</span><br><span class="line">64.18.0.0&#x2F;20</span><br><span class="line">64.233.160.0&#x2F;19</span><br><span class="line">64.79.152.0&#x2F;23</span><br><span class="line">64.9.224.0&#x2F;19</span><br><span class="line">66.102.0.0&#x2F;20</span><br><span class="line">66.249.64.0&#x2F;19</span><br><span class="line">70.32.128.0&#x2F;19</span><br><span class="line">72.14.192.0&#x2F;18</span><br><span class="line">74.114.24.0&#x2F;21</span><br><span class="line">74.125.0.0&#x2F;16</span><br><span class="line">89.207.224.0&#x2F;21</span><br><span class="line">99.198.128.0&#x2F;17</span><br><span class="line">103.62.64.0&#x2F;22</span><br><span class="line">103.86.148.0&#x2F;24</span><br><span class="line">104.132.0.0&#x2F;14</span><br><span class="line">104.154.0.0&#x2F;15</span><br><span class="line">104.196.0.0&#x2F;14</span><br><span class="line">104.237.161.0&#x2F;24</span><br><span class="line">104.237.162.0&#x2F;23</span><br><span class="line">104.237.164.0&#x2F;23</span><br><span class="line">104.237.172.0&#x2F;24</span><br><span class="line">104.237.174.0&#x2F;23</span><br><span class="line">104.237.188.0&#x2F;22</span><br><span class="line">107.167.160.0&#x2F;19</span><br><span class="line">107.178.192.0&#x2F;18</span><br><span class="line">107.188.128.0&#x2F;17</span><br><span class="line">108.170.192.0&#x2F;18</span><br><span class="line">108.177.0.0&#x2F;17</span><br><span class="line">108.59.80.0&#x2F;20</span><br><span class="line">113.197.104.0&#x2F;22</span><br><span class="line">130.211.0.0&#x2F;16</span><br><span class="line">136.112.0.0&#x2F;12</span><br><span class="line">136.22.0.0&#x2F;23</span><br><span class="line">136.22.129.0&#x2F;24</span><br><span class="line">136.22.159.0&#x2F;24</span><br><span class="line">136.22.64.0&#x2F;18</span><br><span class="line">136.32.0.0&#x2F;11</span><br><span class="line">142.250.0.0&#x2F;15</span><br><span class="line">146.148.0.0&#x2F;17</span><br><span class="line">159.192.27.0&#x2F;24</span><br><span class="line">162.216.148.0&#x2F;22</span><br><span class="line">162.222.176.0&#x2F;21</span><br><span class="line">165.193.245.0&#x2F;24</span><br><span class="line">172.102.8.0&#x2F;21</span><br><span class="line">172.110.32.0&#x2F;21</span><br><span class="line">172.217.0.0&#x2F;16</span><br><span class="line">172.253.0.0&#x2F;16</span><br><span class="line">173.194.0.0&#x2F;16</span><br><span class="line">173.255.112.0&#x2F;20</span><br><span class="line">185.150.148.0&#x2F;22</span><br><span class="line">185.25.28.0&#x2F;22</span><br><span class="line">192.104.160.0&#x2F;23</span><br><span class="line">192.119.16.0&#x2F;20</span><br><span class="line">192.158.28.0&#x2F;22</span><br><span class="line">192.178.0.0&#x2F;15</span><br><span class="line">192.200.224.0&#x2F;19</span><br><span class="line">199.192.112.0&#x2F;22</span><br><span class="line">199.223.232.0&#x2F;21</span><br><span class="line">199.36.152.0&#x2F;21</span><br><span class="line">199.91.151.0&#x2F;24</span><br><span class="line">203.190.122.0&#x2F;24</span><br><span class="line">207.126.144.0&#x2F;20</span><br><span class="line">207.223.160.0&#x2F;20</span><br><span class="line">207.251.96.0&#x2F;24</span><br><span class="line">208.117.224.0&#x2F;19</span><br><span class="line">208.211.225.0&#x2F;24</span><br><span class="line">208.65.152.0&#x2F;22</span><br><span class="line">208.68.108.0&#x2F;22</span><br><span class="line">208.81.188.0&#x2F;22</span><br><span class="line">209.107.176.0&#x2F;20</span><br><span class="line">209.210.68.0&#x2F;23</span><br><span class="line">209.62.176.0&#x2F;20</span><br><span class="line">209.63.122.0&#x2F;23</span><br><span class="line">209.63.62.0&#x2F;23</span><br><span class="line">209.85.128.0&#x2F;17</span><br><span class="line">216.21.160.0&#x2F;20</span><br><span class="line">216.239.32.0&#x2F;19</span><br><span class="line">216.252.220.0&#x2F;22</span><br><span class="line">216.58.192.0&#x2F;19</span><br><span class="line">216.73.80.0&#x2F;20</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;作用未知，纯粹好玩&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ip" scheme="http://nbma.info/tags/ip/"/>
    
  </entry>
  
  <entry>
    <title>一些有意思的项目</title>
    <link href="http://nbma.info/some-interesting-projects/"/>
    <id>http://nbma.info/some-interesting-projects/</id>
    <published>2020-03-07T13:36:23.000Z</published>
    <updated>2020-08-17T16:29:28.236Z</updated>
    
    <content type="html"><![CDATA[<p>收藏到浏览器书签时间长就忘了，star多了也懒得翻，还是记这吧。</p><span id="more"></span><p>目前最好用的网络资源管理系统<br><a href="https://github.com/netbox-community/netbox">netbox-community/netbox</a>  </p><p>目前最好用的网络配置备份工具<br><a href="https://github.com/ytti/oxidized">ytti/oxidized</a>  </p><p>一个正在快速迭代的自动化网管系统<br><a href="https://github.com/afourmy/eNMS">afourmy/eNMS</a></p><p>结合了napalm和testfsm的api工具<br><a href="https://github.com/tbotnz/netpalm">tbotnz / netpalm</a></p><p>一个网络监控的小工具(支持NetFlow IPFIX sFlow libpcap BGP BMP RPKI IGP Streaming Telemetry)<br><a href="https://github.com/pmacct/pmacct">pmacct / pmacct</a></p><p>一个纯python的自动化框架（好像类似ansible，思科有篇<a href="https://blogs.cisco.com/developer/nornir-python-automation-framework">博客</a>介绍<br><a href="https://github.com/nornir-automation/nornir">nornir-automation/nornir</a></p><p>基于nornir实现的的自动化网管系统，可以对接netbox、oxidized<br><a href="https://github.com/SUNET/cnaas-nms">SUNET/cnaas-nms</a></p><p>一个纯python实现的网络配置备份系统,似乎数据源依赖nornir<br><a href="https://github.com/rackerlabs/stockpiler">rackerlabs/stockpiler</a></p><p>bgp监控程序<br><a href="https://github.com/osrg/gobgp">osrg/gobgp</a></p><p>flask实现的bgp路由监控(仿照gobgp)<br><a href="https://github.com/rhicks/bgp-dashboard">rhicks/bgp-dashboard</a></p><p>基于yaml格式的文本上传svg格式的拓扑文件drawthe.net<br><a href="https://github.com/cidrblock/drawthe.net">cidrblock/drawthe.net</a></p><p>python和shell实现的网线流量分析系统、可以抓取pcap文件和分析zeek日志<br><a href="https://github.com/idaholab/Malcolm">idaholab/Malcolm</a></p><p>网络流量回溯系统，可以查看导出pcap文件<br><a href="https://github.com/aol/moloch">aol/moloch</a></p><p>python实现并更新的smokping<br><a href="https://github.com/20c/vaping">20c/vaping</a></p><p>雅虎的udping<br><a href="https://github.com/yahoo/UDPing">yahoo/UDPing</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;收藏到浏览器书签时间长就忘了，star多了也懒得翻，还是记这吧。&lt;/p&gt;</summary>
    
    
    
    <category term="收藏分享" scheme="http://nbma.info/categories/%E6%94%B6%E8%97%8F%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>优化MacOS的Anyconnect安装包</title>
    <link href="http://nbma.info/redeploy-anyconnect-for-macos/"/>
    <id>http://nbma.info/redeploy-anyconnect-for-macos/</id>
    <published>2019-08-06T03:44:45.000Z</published>
    <updated>2020-08-17T16:29:28.235Z</updated>
    
    <content type="html"><![CDATA[<p>Mac系统的Anyconnect Predeploy安装包中集成了VPN、Web Security、Diagnostics and Reporting Tool、AMP Enabler、Posture、ISE Posture、Network Visibility、Umbrella Roaming Security组件，在正常的安装过程中，这些组件都是默认勾选安装的。</p><span id="more"></span><p>虽然安装过程很简单，但是难免有傻X用户看都不看直接下一步，所以我决定优化一下客户端。</p><hr><p>最开始的思路是先从官方找，除了Predeploy版本外，官方还提供了Web deploy版本，这两个版本的区别在于Web deploy用于上传到ASA内部，用户从web端访问VPN的时候自动部署anyconnect软件；Pre Deploy是用于预先部署的单独安装包。</p><p>官方的<a href="https://www.cisco.com/c/en/us/td/docs/security/vpn_client/anyconnect/anyconnect47/administration/guide/b_AnyConnect_Administrator_Guide_4-7/deploy-anyconnect.html">anyconnect手册</a>中写了如何通过ASDM定制安装包，但是经过测试ASDM仅支持windows版的定制，手册也没有提供macOS版的相关参数。<br>不过在手册的<code>#Disable the Customer Experience Feedback Module</code>章节发现了一段描述可以把dmg文件从只读转换为可读写。</p><blockquote><p>Convert the dmg package from read-only to read-write using Disk Utility or hdiutil. For example:</p><p>hdiutil convert anyconnect-macosx-i386-ver-k9.dmg -format UDRW -o anyconnect-macosx-i386-ver-k9-rw.dmg</p></blockquote><p>那么新的思路就是修改dmg文件包的内容，再重新打包。<br>首先是打开<code>anyconnect-macos-4.7.01076-predeploy-k9.dmg</code>，把<code>Anyconnect.pkg</code>复制出来。<br>使用<code>pkgutil</code>工具解压，目录结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ pkgutil --expand AnyConnect.pkg anyconnect</span><br><span class="line"></span><br><span class="line">$ tree -L 1 anyconnect</span><br><span class="line">anyconnect</span><br><span class="line">├── Distribution</span><br><span class="line">├── Resources</span><br><span class="line">├── dart_module.pkg</span><br><span class="line">├── fireamp_module.pkg</span><br><span class="line">├── iseposture_module.pkg</span><br><span class="line">├── nvm_module.pkg</span><br><span class="line">├── posture_module.pkg</span><br><span class="line">├── umbrella_module.pkg</span><br><span class="line">├── vpn_module.pkg</span><br><span class="line">└── websecurity_module.pkg</span><br></pre></td></tr></table></figure><p><code>Distribution</code>是安装过程中的配置文件<br><code>Resources</code>是安装过程中的字体、license服务协议、背景图片等资源<br>其他的pkg就是各个组件了。</p><p>优化的办法就删掉其他pkg，只保留<code>vpn_module.pkg</code>。然后在修改<code>Distribution</code>，注释或者删掉其他组件的调用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; standalone=&quot;yes&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">installer-gui-script</span> <span class="attr">minSpecVersion</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>AnyConnect Secure Mobility Client<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">background</span> <span class="attr">file</span>=<span class="string">&quot;pkg_background.png&quot;</span> <span class="attr">scaling</span>=<span class="string">&quot;proportional&quot;</span> <span class="attr">alignment</span>=<span class="string">&quot;bottomleft&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">license</span> <span class="attr">file</span>=<span class="string">&quot;License.rtf&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">options</span> <span class="attr">customize</span>=<span class="string">&quot;always&quot;</span> <span class="attr">rootVolumeOnly</span>=<span class="string">&quot;true&quot;</span> <span class="attr">hostArchitectures</span>=<span class="string">&quot;i386&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">choices-outline</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">line</span> <span class="attr">choice</span>=<span class="string">&quot;choice_vpn&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--         &lt;line choice=&quot;choice_websecurity&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;line choice=&quot;choice_fireamp&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;line choice=&quot;choice_dart&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;line choice=&quot;choice_posture&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;line choice=&quot;choice_iseposture&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;line choice=&quot;choice_nvm&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;line choice=&quot;choice_umbrella&quot;/&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choices-outline</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">choice</span> <span class="attr">id</span>=<span class="string">&quot;choice_vpn&quot;</span> <span class="attr">start_enabled</span>=<span class="string">&quot;enable_module()&quot;</span> <span class="attr">enabled</span>=<span class="string">&quot;choice_vpn_enabled()&quot;</span> <span class="attr">start_selected</span>=<span class="string">&quot;check_upgrade()&quot;</span> <span class="attr">selected</span>=<span class="string">&quot;choice_vpn_selected()&quot;</span> <span class="attr">title</span>=<span class="string">&quot;VPN&quot;</span> <span class="attr">description</span>=<span class="string">&quot;Installs the module that enables VPN capabilities.&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pkg-ref</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.pkg.anyconnect.vpn&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choice</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     &lt;choice id=&quot;choice_websecurity&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;Web Security&quot; description=&quot;Installs the WebSecurity module that enables cloud scanning of web content to protect against malware and enforce acceptable use policies via the ScanSafe cloud proxies.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.websecurity_v2&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt;</span></span><br><span class="line"><span class="comment">    &lt;choice id=&quot;choice_dart&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;Diagnostics and Reporting Tool&quot; description=&quot;Installs the diagnostics module that collects AnyConnect Secure Mobility Client troubleshooting information.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.dart&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt;</span></span><br><span class="line"><span class="comment">    &lt;choice id=&quot;choice_fireamp&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;AMP Enabler&quot; description=&quot;Installs the AMP Enabler module that downloads and deploys AMP for Endpoints, as configured by the administrator.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.fireamp&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt;</span></span><br><span class="line"><span class="comment">    &lt;choice id=&quot;choice_posture&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;Posture&quot; description=&quot;Installs the module that provides the AnyConnect Secure Mobility Client with the ability to identify the operating system, antivirus, antispyware, and firewall software installed on the host prior to creating a remote access connection to the secure gateway.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.posture&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt;</span></span><br><span class="line"><span class="comment">    &lt;choice id=&quot;choice_iseposture&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;ISE Posture&quot; description=&quot;Installs the module that provides the AnyConnect Secure Mobility Client with the functionality needed to authenticate to wired or wireless networks controlled by the Identity Services Engine, including examination and any needed remediation of the connecting host environment.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.iseposture&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt;</span></span><br><span class="line"><span class="comment">    &lt;choice id=&quot;choice_nvm&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;Network Visibility&quot; description=&quot;Installs the Network Visibility Module which collects application telemetry data.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.nvm_v2&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt;</span></span><br><span class="line"><span class="comment">    &lt;choice id=&quot;choice_umbrella&quot; start_selected=&quot;check_upgrade()&quot; start_enabled=&quot;enable_module()&quot; title=&quot;Umbrella Roaming Security&quot; description=&quot;Installs the module that enables Umbrella Roaming Security.&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.umbrella&quot;/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/choice&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pkg-ref</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.pkg.anyconnect.vpn&quot;</span> <span class="attr">version</span>=<span class="string">&quot;4.7.01076&quot;</span> <span class="attr">installKBytes</span>=<span class="string">&quot;22150&quot;</span>&gt;</span>#vpn_module.pkg<span class="tag">&lt;/<span class="name">pkg-ref</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.dart&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;4608&quot;&gt;#dart_module.pkg&lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.websecurity_v2&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;3052&quot;&gt;#websecurity_module.pkg&lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.fireamp&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;786&quot;&gt;#fireamp_module.pkg&lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.posture&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;51264&quot;&gt;#posture_module.pkg&lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.iseposture&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;3010&quot;&gt;#iseposture_module.pkg&lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.nvm_v2&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;1485&quot;&gt;#nvm_module.pkg&lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.umbrella&quot; version=&quot;4.7.01076&quot; installKBytes=&quot;3645&quot;&gt;#umbrella_module.pkg&lt;/pkg-ref&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">installation-check</span> <span class="attr">script</span>=<span class="string">&quot;InstallationCheck()&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">volume-check</span> <span class="attr">script</span>=<span class="string">&quot;VolumeCheck()&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> gUpgradeModules = [];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">check_upgrade</span>(<span class="params"></span>)</span></span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> modulePkgInfo = my.choice.packages[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> moduleReceipt = my.target.receiptForIdentifier(modulePkgInfo.identifier);</span></span><br><span class="line"></span><br><span class="line">        if (moduleReceipt)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> comparison = system.compareVersions(moduleReceipt.version, modulePkgInfo.version);</span></span><br><span class="line"></span><br><span class="line">            if (comparison == 0)</span><br><span class="line">            &#123;</span><br><span class="line"><span class="javascript">                system.log(<span class="string">&quot;Found an existing installed version: &quot;</span> + my.choice.title);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        gUpgradeModules.push(my.choice.id);</span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">enable_module</span>(<span class="params"></span>)</span></span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> moduleID = my.choice.id;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> (gUpgradeModules.indexOf(moduleID) &amp;gt; -<span class="number">1</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">InstallationCheck</span>(<span class="params"></span>)</span></span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(!(system.compareVersions(system.version.ProductVersion, <span class="string">&#x27;10.9&#x27;</span>) &amp;gt;= <span class="number">0</span>))</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            my.result.title = <span class="string">&#x27;Cisco AnyConnect Secure Mobility Client&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            my.result.message = <span class="string">&#x27;This software requires Mac OS X version 10.9 or later.&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            my.result.type = <span class="string">&#x27;Fatal&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">VolumeCheck</span>(<span class="params"></span>)</span></span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">        <span class="comment">// version of VPN being installed has to be higher than the version already installed</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vpnReceipt = my.target.receiptForIdentifier(<span class="string">&quot;com.cisco.pkg.anyconnect.vpn&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vpnPackage = choices.choice_vpn.packages[<span class="number">0</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// if the receipt is not there assume no VPN installed or pre-3.1.1 version so it is OK to install</span></span></span><br><span class="line">        if (vpnReceipt)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="comment">// there is a 3.1.1+ version of VPN already installed</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// check to see if version in this package is newer</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> comparison = system.compareVersions(vpnReceipt.version, vpnPackage.version);</span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">            if (comparison <span class="symbol">&amp;gt;</span> 0)</span></span></span><br><span class="line">            &#123;</span><br><span class="line"><span class="javascript">                <span class="comment">// installed version is newer</span></span></span><br><span class="line"><span class="javascript">                my.result.message = <span class="string">&#x27;Newer version &#x27;</span> + vpnReceipt.version + <span class="string">&#x27; of the Cisco AnyConnect Secure Mobility Client is already installed.&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                my.result.type = <span class="string">&#x27;Fatal&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">choice_vpn_enabled</span>(<span class="params"></span>)</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        if (!enable_module())</span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">        return (!choices.choice_websecurity.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_posture.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_iseposture.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_fireamp.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_nvm.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_umbrella.selected);</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">choice_vpn_selected</span>(<span class="params"></span>)</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        if (!enable_module())</span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tSelected;</span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">        tSelected=((choices.choice_websecurity.selected || choices.choice_posture.selected || choices.choice_iseposture.selected || choices.choice_fireamp.selected || choices.choice_nvm.selected || choices.choice_umbrella.selected) || (!choices.choice_websecurity.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_posture.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_iseposture.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_fireamp.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_nvm.selected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> !choices.choice_umbrella.selected));</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (choice_vpn_enabled()==<span class="literal">false</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> tSelected;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">        return (tSelected <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> my.choice.selected);</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pkg-ref</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.pkg.anyconnect.vpn&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bundle-version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">CFBundleShortVersionString</span>=<span class="string">&quot;4.7.01076&quot;</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;4.7.01076&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.Cisco-AnyConnect-Secure-Mobility-Client&quot;</span> <span class="attr">path</span>=<span class="string">&quot;Applications/Cisco/Cisco AnyConnect Secure Mobility Client.app&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;4.7.01076&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.vpndownloader&quot;</span> <span class="attr">path</span>=<span class="string">&quot;opt/cisco/anyconnect/bin/vpndownloader.app&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">CFBundleShortVersionString</span>=<span class="string">&quot;4.5.03023&quot;</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;4.5.03023&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.Cisco-AnyConnect-Secure-Mobility-Client-Notification&quot;</span> <span class="attr">path</span>=<span class="string">&quot;opt/cisco/anyconnect/bin/Cisco AnyConnect Secure Mobility Client Notification.app&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">CFBundleShortVersionString</span>=<span class="string">&quot;4.7.01076&quot;</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;4.7.01076&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.cisco.uninstaller&quot;</span> <span class="attr">path</span>=<span class="string">&quot;Applications/Cisco/Uninstall AnyConnect.app&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bundle-version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pkg-ref</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.websecurity_v2&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.fireamp&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.dart&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version&gt;</span></span><br><span class="line"><span class="comment">            &lt;bundle CFBundleShortVersionString=&quot;4.7.01076&quot; id=&quot;com.cisco.pkg.anyconnect.dart&quot; path=&quot;Applications/Cisco/Cisco AnyConnect DART.app&quot;/&gt;</span></span><br><span class="line"><span class="comment">            &lt;bundle CFBundleShortVersionString=&quot;4.7.01076&quot; CFBundleVersion=&quot;4.7.01076&quot; id=&quot;com.cisco.dartuninstaller&quot; path=&quot;Applications/Cisco/Uninstall AnyConnect DART.app&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;/bundle-version&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.posture&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.iseposture&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.nvm_v2&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt;</span></span><br><span class="line"><span class="comment">    &lt;pkg-ref id=&quot;com.cisco.pkg.anyconnect.umbrella&quot;&gt;</span></span><br><span class="line"><span class="comment">        &lt;bundle-version&gt;</span></span><br><span class="line"><span class="comment">            &lt;bundle CFBundleVersion=&quot;1.5.5&quot; id=&quot;com.opendns.OpenDNS-Diagnostic&quot; path=&quot;opt/cisco/anyconnect/bin/UmbrellaDiagnostic.app&quot;/&gt;</span></span><br><span class="line"><span class="comment">        &lt;/bundle-version&gt;</span></span><br><span class="line"><span class="comment">    &lt;/pkg-ref&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">installer-gui-script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简单看了下里面的判断逻辑，还需要吧<code>&lt;choice id=&quot;choice_vpn&quot; start_enabled=&quot;enable_module()&quot;</code>修改为<code>&lt;choice id=&quot;choice_vpn&quot; start_enabled=&quot;1&quot;</code>即可。</p><p>使用pkgutil重新打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pkgutil</span>  --flatten anyconnect Anyconnect-New.pkg</span><br></pre></td></tr></table></figure><p>重新挂载之前改为可读写的dmg，然后替换新的pkg文件。移除挂载后，再用macOS磁盘工具重新调整dmg的大小，调整后改为只读：</p><p><a href="https://support.apple.com/zh-cn/guide/disk-utility/dskuc033a48f/mac">在 Mac 上使用“磁盘工具”调整磁盘映像大小</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hdiutil</span> convert anyconnect-macos-4.7.01076-predeploy-k9-rw.dmg -format UDRO -o anyconnect-macos-4.7.01076-VPN.dmg</span><br></pre></td></tr></table></figure><p>参考资料：<br><a href="https://www.cisco.com/c/en/us/td/docs/security/vpn_client/anyconnect/anyconnect47/administration/guide/b_AnyConnect_Administrator_Guide_4-7/deploy-anyconnect.html">Cisco AnyConnect Secure Mobility Client Administrator Guide, Release 4.7</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Mac系统的Anyconnect Predeploy安装包中集成了VPN、Web Security、Diagnostics and Reporting Tool、AMP Enabler、Posture、ISE Posture、Network Visibility、Umbrella Roaming Security组件，在正常的安装过程中，这些组件都是默认勾选安装的。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="SSLVPN" scheme="http://nbma.info/tags/SSLVPN/"/>
    
    <category term="cisco" scheme="http://nbma.info/tags/cisco/"/>
    
  </entry>
  
  <entry>
    <title>zabbix添加企业微信告警</title>
    <link href="http://nbma.info/zabbix-wechat-alter/"/>
    <id>http://nbma.info/zabbix-wechat-alter/</id>
    <published>2019-02-14T07:16:52.000Z</published>
    <updated>2022-12-23T13:49:46.292Z</updated>
    
    <content type="html"><![CDATA[<p>一直没做过微信告警集成到zabbix，试了下，还挺简单的，记录一下</p><span id="more"></span><p>首先是需要有一个企业微信，在其中创建一个自建应用</p><p><img src="/img/68e0aeafly1g05zl8y3oej21240uiwh5.jpg"></p><p>设置好可见部门，记录<code>AgentId</code>和<code>Secret</code></p><p>然后再“通讯录”记下需要接受告警信息的<code>部门ID</code>，在“我的企业”-“企业信息”里记录<code>企业ID</code></p><p>本着 不重复造轮子的原则，我找了这个脚本<a href="https://github.com/X-Mars/Zabbix-Alert-WeChat">X-Mars/Zabbix-Alert-WeChat</a><br>这个也是zabbix官方推荐的脚本。</p><p>将上面记下的四个ID填入脚本指定字段。<br>然后上传到<code>/usr/local/share/zabbix/alertscripts</code>或者 <strong>AlertScriptsPath</strong> 指定的其它位置.<br>设置好执行权限和属组</p><p>然后再zabbix web中 “管理”-“报警媒介类型”-“创建”</p><p><img src="/img/68e0aeafly1g0600zxg5dj20qc0sydit.jpg"></p><p>脚本名称<code>wechat.py</code><br>添加三个参数<code>&#123;ALERT.SENDTO&#125;</code> <code>&#123;ALERT.SUBJECT&#125;</code> <code>&#123;ALERT.MESSAGE&#125;</code></p><p>然后是在“配置”-“动作”-“操作”中 添加触发器的触发介质，把刚才创建的报警媒介wechat加上</p><p><img src="/img/68e0aeafly1g0605vr5vjj20ju0hm0vs.jpg"></p><p>最后是在“管理”-“用户”-“报警媒介”中，启用报警媒介wechat</p><p><img src="/img/68e0aeafly1g0607aycjjj20xs0n279j.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一直没做过微信告警集成到zabbix，试了下，还挺简单的，记录一下&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="monitor" scheme="http://nbma.info/tags/monitor/"/>
    
    <category term="zabbix" scheme="http://nbma.info/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>ansible批量配置思科路由器</title>
    <link href="http://nbma.info/ansible-manage-router/"/>
    <id>http://nbma.info/ansible-manage-router/</id>
    <published>2019-01-11T08:52:56.000Z</published>
    <updated>2022-12-23T13:49:46.280Z</updated>
    
    <content type="html"><![CDATA[<p>ansible是一个python开发的基于ssh的配置管理工具，多用于devops生态。同时，一些网络厂商也为ansible开发了响应的模块用于批量管理网络设备。</p><span id="more"></span><p>相对自己拿pyhton的netmiko自己写一些脚本，ansible现成的模块更加高效。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>以centos7为例，直接yum安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ansible</span><br><span class="line"></span><br><span class="line">ansible --version</span><br><span class="line"><span class="comment">#查看ansible版本</span></span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>ansible中有以下几个概念</p><ul><li>inventory: 仓库，需要被管理的主机列表和基本信息</li><li>playbook: 剧本，由多个task组成</li><li>modules: 模块，实现具体的功能</li></ul><p><strong>inventory</strong>中可以有多个group，执行时需要指定inventory文件，或者特定的group；ansible默认读取的是/etc/ansible/hosts文件，也可以用<code>-i</code>参数来指定inventory所在的位置，下面是一个配置示例</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[ios]</span><br><span class="line">10.211.55.27</span><br><span class="line">10.211.55.26</span><br><span class="line">10.211.55.24</span><br><span class="line">10.211.55.25</span><br><span class="line"></span><br><span class="line">[ios:vars]</span><br><span class="line">ansible_ssh_user=cisco</span><br><span class="line">ansible_ssh_pass=cisco</span><br><span class="line">ansible_connection=local</span><br></pre></td></tr></table></figure><p>在介绍<strong>playbook</strong>之前，先看下拓扑：</p><img src="/img/68e0aeafly1fxln3rbprhj20ie0lsq4z.jpg" width="30%" height="30%" /><p>这里要实现的是对，配置NTP,SNMP,接口IP以及启用ospf：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">ios</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">connection:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">vars_files:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">interface.yml</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line"><span class="comment"># 配置 ntp server</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">configure</span> <span class="string">ntp</span> <span class="string">server</span></span><br><span class="line">    <span class="attr">ios_config:</span></span><br><span class="line">      <span class="attr">lines:</span> <span class="string">ntp</span> <span class="string">server</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 snmp</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">configure</span> <span class="string">snmp</span></span><br><span class="line">    <span class="attr">ios_config:</span></span><br><span class="line">      <span class="attr">lines:</span> <span class="string">snmp-server</span> <span class="string">community</span> <span class="string">network-read</span> <span class="string">RO</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">configure</span> <span class="string">ip</span> <span class="string">address</span> <span class="string">and</span> <span class="string">ospf</span></span><br><span class="line">    <span class="attr">ios_config:</span></span><br><span class="line">      <span class="attr">lines:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="literal">no</span> <span class="string">shutdown</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">ip</span> <span class="string">address</span> &#123;&#123; <span class="string">item.ip</span> &#125;&#125; &#123;&#123; <span class="string">item.mask</span> &#125;&#125;</span><br><span class="line">        <span class="bullet">-</span> <span class="string">ip</span> <span class="string">ospf</span> <span class="number">1</span> <span class="string">area</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">parents:</span> <span class="string">interface</span> &#123;&#123; <span class="string">item.port</span> &#125;&#125;</span><br><span class="line">    <span class="attr">with_items:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; interfaces &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">when:</span> <span class="string">(item.router</span> <span class="string">==</span> <span class="string">inventory_hostname)</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>前面显示指定了需要配置的设备组，然后引入了一个变量文件interface.yml，内容是设备接口对应的ip地址：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">interfaces:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.27</span>, <span class="attr">port:</span> <span class="string">e0/0</span>, <span class="attr">ip:</span> <span class="number">12.1</span><span class="number">.1</span><span class="number">.1</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.27</span>, <span class="attr">port:</span> <span class="string">e0/1</span>, <span class="attr">ip:</span> <span class="number">13.1</span><span class="number">.1</span><span class="number">.1</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.26</span>, <span class="attr">port:</span> <span class="string">e0/0</span>, <span class="attr">ip:</span> <span class="number">12.1</span><span class="number">.1</span><span class="number">.2</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.26</span>, <span class="attr">port:</span> <span class="string">e0/1</span>, <span class="attr">ip:</span> <span class="number">23.1</span><span class="number">.1</span><span class="number">.2</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.26</span>, <span class="attr">port:</span> <span class="string">e0/2</span>, <span class="attr">ip:</span> <span class="number">24.1</span><span class="number">.1</span><span class="number">.2</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.25</span>, <span class="attr">port:</span> <span class="string">e0/0</span>, <span class="attr">ip:</span> <span class="number">24.1</span><span class="number">.1</span><span class="number">.4</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.25</span>, <span class="attr">port:</span> <span class="string">e0/1</span>, <span class="attr">ip:</span> <span class="number">34.1</span><span class="number">.1</span><span class="number">.4</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.24</span>, <span class="attr">port:</span> <span class="string">e0/0</span>, <span class="attr">ip:</span> <span class="number">13.1</span><span class="number">.1</span><span class="number">.3</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.24</span>, <span class="attr">port:</span> <span class="string">e0/1</span>, <span class="attr">ip:</span> <span class="number">23.1</span><span class="number">.1</span><span class="number">.3</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">router:</span> <span class="number">10.211</span><span class="number">.55</span><span class="number">.24</span>, <span class="attr">port:</span> <span class="string">e0/2</span>, <span class="attr">ip:</span> <span class="number">34.1</span><span class="number">.1</span><span class="number">.3</span>, <span class="attr">mask:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>&#125;</span><br></pre></td></tr></table></figure><p>with_items是循环，读取interface这个列表，一次作为item，当符合when的条件时就执行，不符合就跳过。</p><p>执行playbook:</p><p><img src="/img/68e0aeafly1fz2tfv0du8j21fg10ah48.jpg" alt="1"><br><img src="/img/68e0aeafly1fz2tgu2qnwj21fi0p2wuk.jpg" alt="2"></p><p><strong>modules</strong>配置<br>上面playbook中的ios_config就是ansible的一个模块。它能在思科ios系统的config模式下执行各种命令。<br>其他各种模块可以查看<a href="https://docs.ansible.com/ansible/latest/modules/list_of_network_modules.html#ios">官网的介绍</a></p><p>参考文档：<br><a href="https://www.opscaff.com/2017/05/11/ansible-%E7%BD%91%E7%BB%9C%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86/">ansible 网络自动化管理</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ansible是一个python开发的基于ssh的配置管理工具，多用于devops生态。同时，一些网络厂商也为ansible开发了响应的模块用于批量管理网络设备。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="ansible" scheme="http://nbma.info/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>单出口设备的多WAN接入的冗余设置</title>
    <link href="http://nbma.info/ip-sla-pbr-track/"/>
    <id>http://nbma.info/ip-sla-pbr-track/</id>
    <published>2018-12-15T07:28:04.000Z</published>
    <updated>2022-12-23T13:49:46.284Z</updated>
    
    <content type="html"><![CDATA[<p>目前的网络情况，无论是LAN还是WAN，冗余越来越多，SLA也变的越来越重要。自己不熟悉的部分就一点一点消灭掉。</p><p>以思科设备为例，多WAN冗余接入最佳实践方案：使用策略路由PBR，将内部不同网段出向流量的下一跳修改成不同的WAN出口，使用SLA和track配合PBR进行链路检测和冗余切换。</p><span id="more"></span><p>策略路由，Policy-based Routing，当一个流量到达路由器设备时，会优先被策略路由处理，然后才是查询路由表。基于此来实现多出口冗余。</p><p>以这个拓扑为例：</p><p><img src="/img/68e0aeafly1fy7h7736ppj211g0eedj8.jpg"></p><p>路由器Border作为出口，连接了ISP1和ISP2两个ISP的WAN出口；R1内部有终端PC用户（192.168.1.x）和一些Server集群(10.0.0.x)，使用策略路由实现PC通过ISP1访问互联网，Server通过ISP2访问互联网。<br>基本ip配置，内网路由，外网路由等基本配置略</p><h2 id="SLA配置"><a href="#SLA配置" class="headerlink" title="SLA配置"></a>SLA配置</h2><p>首先在Border路由器上配置SLA检测到ISP1,ISP2链路的可达性。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ip sla <span class="number">1</span></span><br><span class="line"> icmp-echo <span class="number">1.1</span>.1.2 source-ip <span class="number">1.1</span>.1.1</span><br><span class="line"> threshold <span class="number">100</span></span><br><span class="line"> timeout <span class="number">100</span></span><br><span class="line"> frequency <span class="number">3</span></span><br><span class="line">ip sla schedule <span class="number">1</span> life forever start-time now</span><br><span class="line"></span><br><span class="line"><span class="comment">#track 100检测ISP1的可达性</span></span><br><span class="line">track <span class="number">100</span> ip sla <span class="number">1</span> reachability</span><br><span class="line"></span><br><span class="line">ip sla <span class="number">2</span></span><br><span class="line"> icmp-echo <span class="number">2.2</span>.2.2 source-interface Ethernet0/<span class="number">1</span></span><br><span class="line"> threshold <span class="number">100</span></span><br><span class="line"> timeout <span class="number">100</span></span><br><span class="line"> frequency <span class="number">3</span></span><br><span class="line">ip sla schedule <span class="number">2</span> life forever start-time now</span><br><span class="line"></span><br><span class="line"><span class="comment">#track 200检测ISP2的可达性</span></span><br><span class="line">track <span class="number">200</span> ip sla <span class="number">2</span> reachability</span><br></pre></td></tr></table></figure><p>路由器将没隔3秒发送一次icmp的ping来来检测目标ip的可达性，超时时间是100ms。</p><h2 id="PBR配置"><a href="#PBR配置" class="headerlink" title="PBR配置"></a>PBR配置</h2><p>然后配置策略路由，先用acl匹配流量，然后route-map设置策略，再接口下调用</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#抓取流量</span></span><br><span class="line">access-<span class="built_in">list</span> <span class="number">100</span> permit ip <span class="number">192.168</span>.1.0 <span class="number">0.0</span>.0.255 <span class="built_in">any</span></span><br><span class="line">access-<span class="built_in">list</span> <span class="number">199</span> permit ip <span class="number">10.1</span>.1.0 <span class="number">0.0</span>.0.255 <span class="built_in">any</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置route-map</span></span><br><span class="line">route-map PBR permit <span class="number">10</span></span><br><span class="line"> match ip address <span class="number">100</span></span><br><span class="line"> set ip <span class="keyword">next</span>-hop verify-availability <span class="number">1.1</span>.1.2 <span class="number">1</span> track <span class="number">100</span></span><br><span class="line"> set ip <span class="keyword">next</span>-hop verify-availability <span class="number">2.2</span>.2.2 <span class="number">2</span> track <span class="number">200</span></span><br><span class="line"></span><br><span class="line">route-map PBR permit <span class="number">20</span></span><br><span class="line"> match ip address <span class="number">199</span></span><br><span class="line"> set ip <span class="keyword">next</span>-hop verify-availability <span class="number">2.2</span>.2.2 <span class="number">1</span> track <span class="number">200</span></span><br><span class="line"> set ip <span class="keyword">next</span>-hop verify-availability <span class="number">1.1</span>.1.2 <span class="number">2</span> track <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#接口下调用</span></span><br><span class="line">interface Ethernet0/<span class="number">2</span></span><br><span class="line"> ip policy route-map PBR</span><br></pre></td></tr></table></figure><p>说明：track100状态up的时候，默认pc使用1.1.1.2这个下一跳。track变为down时，这一行设置自动失效，将使用next-hop序号2的作为下一跳。track200同理。</p><h2 id="PAT配置"><a href="#PAT配置" class="headerlink" title="PAT配置"></a>PAT配置</h2><p>原有的ip nat inside source list xx只能为一个outside出口做地址转换，所以要同时修改源nat设置：把源地址列表nat改为根据出接口nat。<br>在Border路由器上使用route-map匹配出接口：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">route-map ISP2 permit <span class="number">10</span></span><br><span class="line"> match interface Ethernet0/<span class="number">1</span></span><br><span class="line">route-map ISP1 permit <span class="number">10</span></span><br><span class="line"> match interface Ethernet0/<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#出接口为e0/0的内部流量，转换为1.1.1.1出去</span></span><br><span class="line"><span class="comment">#出接口为e0/1的内部流量，转换为2.2.2.1出去</span></span><br><span class="line">ip nat inside source route-map ISP1 interface Ethernet0/<span class="number">0</span> overload</span><br><span class="line">ip nat inside source route-map ISP2 interface Ethernet0/<span class="number">1</span> overload</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">PC#traceroute 8.8.8.8 numeric </span><br><span class="line">Type escape sequence to abort.</span><br><span class="line">Tracing the route to 8.8.8.8</span><br><span class="line">VRF info: (vrf in name&#x2F;id, vrf out name&#x2F;id)</span><br><span class="line">  1 192.168.1.1 0 msec 1 msec 0 msec</span><br><span class="line">  2 172.16.1.2 1 msec 0 msec 1 msec</span><br><span class="line">  3 1.1.1.2 5 msec 1 msec 1 msec</span><br><span class="line">  4 100.100.100.101 1 msec *  2 msec</span><br><span class="line">PC#</span><br><span class="line"></span><br><span class="line">Server#traceroute 8.8.8.8 numeric </span><br><span class="line">Type escape sequence to abort.</span><br><span class="line">Tracing the route to 8.8.8.8</span><br><span class="line">VRF info: (vrf in name&#x2F;id, vrf out name&#x2F;id)</span><br><span class="line">  1 10.1.1.1 0 msec 1 msec 0 msec</span><br><span class="line">  2 172.16.1.2 1 msec 0 msec 1 msec</span><br><span class="line">  3 2.2.2.2 1 msec 1 msec 0 msec</span><br><span class="line">  4 200.200.200.202 1 msec *  2 msec</span><br><span class="line">Server#</span><br></pre></td></tr></table></figure><p>在Border或者ISP1上模拟故障</p><p>Border上弹出log<br><code>*Dec 15 07:26:06.798: %TRACK-6-STATE: 100 ip sla 1 reachability Up -&gt; Down</code></p><p>PC已经切换冗余:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PC<span class="comment">#traceroute 8.8.8.8 numeric </span></span><br><span class="line">Type escape sequence to abort.</span><br><span class="line">Tracing the route to <span class="number">8.8</span>.8.8</span><br><span class="line">VRF info: (vrf <span class="keyword">in</span> name/id, vrf out name/id)</span><br><span class="line">  <span class="number">1</span> <span class="number">192.168</span>.1.1 <span class="number">0</span> msec <span class="number">0</span> msec <span class="number">0</span> msec</span><br><span class="line">  <span class="number">2</span> <span class="number">172.16</span>.1.2 <span class="number">1</span> msec <span class="number">1</span> msec <span class="number">0</span> msec</span><br><span class="line">  <span class="number">3</span> <span class="number">2.2</span>.2.2 <span class="number">1</span> msec <span class="number">1</span> msec <span class="number">1</span> msec</span><br><span class="line">  <span class="number">4</span> <span class="number">200.200</span>.200.202 <span class="number">1</span> msec *  <span class="number">2</span> msec</span><br><span class="line">PC<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="默认路由问题"><a href="#默认路由问题" class="headerlink" title="* 默认路由问题"></a>* 默认路由问题</h2><p>首先内到外的流量，由于PBR优于路由表，所以不走路由表。<br>为了外部发起的流量到路由器能够正确的回包，设置默认路由加track，只有当track时up的时候，这条路由才被加入路由表。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip route <span class="number">0.0</span>.0.0 <span class="number">0.0</span>.0.0 <span class="number">1.1</span>.1.1 track <span class="number">100</span></span><br><span class="line">ip route <span class="number">0.0</span>.0.0 <span class="number">0.0</span>.0.0 <span class="number">2.2</span>.2.2 track <span class="number">200</span></span><br></pre></td></tr></table></figure><p>参考文档：<br><a href="bbs.spoto.net/thread-50227-1-1.html">PBR+双出口NAT_CCNP学习资料</a><br><a href="www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/813-cisco-router-ipsla-basic.html">Configuring Static Route Tracking using IP SLA (Basic)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目前的网络情况，无论是LAN还是WAN，冗余越来越多，SLA也变的越来越重要。自己不熟悉的部分就一点一点消灭掉。&lt;/p&gt;
&lt;p&gt;以思科设备为例，多WAN冗余接入最佳实践方案：使用策略路由PBR，将内部不同网段出向流量的下一跳修改成不同的WAN出口，使用SLA和track配合PBR进行链路检测和冗余切换。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="nat" scheme="http://nbma.info/tags/nat/"/>
    
    <category term="SLA" scheme="http://nbma.info/tags/SLA/"/>
    
  </entry>
  
  <entry>
    <title>QoS学习笔记</title>
    <link href="http://nbma.info/qos-base/"/>
    <id>http://nbma.info/qos-base/</id>
    <published>2018-12-07T06:07:26.000Z</published>
    <updated>2022-12-23T13:49:46.289Z</updated>
    
    <content type="html"><![CDATA[<p>年底了，是时候整理下笔记了</p><span id="more"></span><h2 id="QoS的机制"><a href="#QoS的机制" class="headerlink" title="QoS的机制"></a>QoS的机制</h2><p>分类，标记，拥塞管理，拥塞避免，管制整形，链路效率</p><ul><li>分类：将数据分成不同的类别</li><li>标记：标记成不同的优先级</li><li>拥塞管理：网络产生拥塞时，规定数据以什么样的先后顺序传输</li><li>拥塞避免：当网络（队列）即将产生拥塞时，如何丢弃数据包，避免产生拥塞</li><li>管制整形：当用于超出额定带宽是，超出部分不能被传输，采用其他方式处理。</li><li>链路效率：通过头部压缩或者链路分段，来提高带宽效率</li></ul><p>分类和标记是实现差分服务的前提和基础；流量监管、流量整形、接口限速、拥塞管理和拥塞避免从不同方面对网络流量及其分配的资源实施控制，是提供差分服务的具体体现.<br>各种QoS技术在网络设备上的处理顺序如下图:</p><p><img src="/img/68e0aeafly1fxy9pmuibgj20e805emxe.jpg"></p><p>不同技术能应用的方向如下：</p><p><img src="/img/68e0aeafly1fxy9mnjkimj21ly10sx1f.jpg"></p><h2 id="QoS部署模式"><a href="#QoS部署模式" class="headerlink" title="QoS部署模式"></a>QoS部署模式</h2><p>1）CLI：早期传统网络去部署</p><p>2）MQC：（重点）模块化QoS</p><ul><li>定义流量—class-map</li><li>设置策略—policy-map</li><li>应用策略—service-policy</li></ul><p>3）Auto-QoS：在设备，预先配置好了profile，只需要调用即可</p><ul><li>VoIP</li><li>Enterprise</li></ul><h2 id="用于QoS的头部字段"><a href="#用于QoS的头部字段" class="headerlink" title="用于QoS的头部字段"></a>用于QoS的头部字段</h2><p>二层报头没有专门预留的QOS位，在VLAN帧头和MPLS封装中有以下字段可以用于QOS：<br><strong>COS位</strong>：trunk技术，在802.1q报头中有一个3位的PRI ，分为0~7八个等级，5代表语音</p><p><img src="/img/68e0aeafly1fxya3p50mwj20do03rdfp.jpg"></p><p><strong>MPLS的EXP位</strong>，3位，分为0~7八个等级</p><p><img src="/img/68e0aeafly1fxya40tv5sj20cy03x747.jpg"></p><p>三层的ip包头部有一个8位的ToS位，有两种不同的方法来表示数据包的优先级：<strong>IPP</strong>和<strong>DSCP</strong>。</p><ul><li><strong>IP precedence</strong><br>使用TOS的高3位，0~7等级，后5位置0</li></ul><p><img src="/img/68e0aeafly1fxya4qfg95j20dz05n3ye.jpg"></p><ul><li><p><strong>DSCP区分服务代码点</strong><br>使用TOS的高6位，有0~63个等级，可以标记的种类更多，一般分为四种：</p><ul><li><p>Default，6bit全0</p></li><li><p>EF，加速转发，101110，特点：确保最小时延，保证带宽，管制带宽</p></li><li><p>AF，保证转发，aaadd0，’aaa’代表不同的分类1-4，‘dd’代表丢包的可能性1-3，特点：保证带宽，没有拥塞时允许使用额外带宽。每个AF拥有独立的转发机制和带宽保证，dd越大，丢弃可能性越高。<br>AF1: af11, af12, af13<br>AF2: af21, af22, af23<br>AF3: af31, af32, af33<br>AF4: af41, af42, af43</p></li><li><p>CS，兼容IPP，只用高三位，xxx000，cs0-cs7</p><blockquote><p>在使用路由器模拟发包的时候，比如扩展ping，不能直接设置IPP或DSCP的值，只能设置TOS，对应的关系是TOS = IPP × 32 和 TOS = DSCP × 4</p></blockquote><h2 id="QoS机制分析"><a href="#QoS机制分析" class="headerlink" title="QoS机制分析"></a>QoS机制分析</h2></li></ul></li></ul><h3 id="1，分类"><a href="#1，分类" class="headerlink" title="1，分类"></a>1，分类</h3><p>有两种方式：MQC和NBAR</p><ul><li><p>MQC 实现2~4层的匹配<br>class-map中match可以用match调用一下内容：</p><ul><li>ACL</li><li>IP precedence value</li><li>DSCP value</li><li>Qos group number</li><li>MPLS Exp bit</li><li>Protocol</li><li>Another class-map嵌套</li><li>Frame Relay DE bit</li><li>IEEE 802.1q/ISL COS</li><li>Input Interface</li><li>Source MAC address</li><li>Destination MAC address</li><li>RTP(UDP) port range</li><li>Any packet</li></ul></li><li><p>NBAR:基于网络层的应用识别，用于4~7层匹配<br>解决了C/S和基于web应用的分配识别.<br>NBAR的功能：</p><ul><li>识别4-7的应用和协议</li><li>协议发现</li><li>提供流量统计</li></ul><p>NBAR可用于分类的应用程序：</p><ul><li>静态的TCP/UDP端口号</li><li>非TCP/UDP协议</li><li>连接过程中动态协议书的端口</li><li>子端口类型：http分类</li><li>MIME</li></ul><p>配置，需要先开启CEF<br>然后接口下配置协议发现<br>ip nbar protocol-discovery</p></li></ul><h3 id="2，标记"><a href="#2，标记" class="headerlink" title="2，标记"></a>2，标记</h3><p>数据包上可以设置以下标志：</p><ul><li>IP precedence value</li><li>DSCP value</li><li>Qos group number</li><li>MPLS Exp bit</li><li>Frame Relay DE bit</li><li>IEEE 802.1q/ISL COS</li></ul><p>Class-map分类之后，在policy-map中调用，然后set一个标记，最后在接口调用</p><h3 id="3，拥塞管理"><a href="#3，拥塞管理" class="headerlink" title="3，拥塞管理"></a>3，拥塞管理</h3><p>主要是队列技术，只能应用在out方向<br>每个接口只有一个硬件队列，可以有多个软件队列<br>硬件队列默认就是FIFO，软件队列有FIFO,PQ,WRR等</p><ul><li>FIFO：先进先出，简单，拥塞时无法保证关键业务优先发送</li><li><strong>PQ</strong>：优先级队列，需要设置每个软件队列的优先级，高优先级调度完才调度低优先级，且抢占，低优先级有饿死的风险</li><li>RR：轮询，解决PQ低优先的风险，每个队列平等的轮询，无法保证关键业务优先发送</li><li>WRR：权重轮询，能改善关键业务的有线情况，但是调度不精确：按包数量大小权重的话，包大小无法控制；如果按字节数，可能导致包被过度分片</li><li>DRR：赤字轮询，这次多调用，下次少调用，但是同样调度不精确，只能缓解WRR</li><li><strong>WFQ</strong>：加权公平队列，共享带宽，高优先级分配的带宽高，低优先级带宽低，但能保证每个优先级都有指定的带宽，但是不支持自定义对流量分类，默认接口速度低于2.08Mbps是WFQ队列，大于2.08是FIFO队列</li><li><strong>CBFWQ</strong>：基于类的加权公平队列，先使用class-map分类，然后插入策略（每个队列拥塞避免），分配带宽（指定bandwith，百分比，剩余带宽的百分比）</li><li><strong>LLQ</strong>：PQ+CBWFQ</li></ul><h3 id="4，拥塞避免"><a href="#4，拥塞避免" class="headerlink" title="4，拥塞避免"></a>4，拥塞避免</h3><p>队列满了之后，默认使用尾丢弃。</p><ul><li>会影响 TCP同步，导致重传，降低滑动窗口大小</li><li>TCP饿死</li><li>无差异的丢弃</li></ul><p>RED，随机早期检测，在队列满之前随机丢弃数据包</p><ul><li>放慢TCP会话</li><li>减小平均队列的消息</li><li>避免TCP会话同步</li></ul><p>WRED，基于权重的随机早期检测，使用IPP或者DSCP的RED Profile进行丢弃，先丢弃优先级低的。</p><p>ECN，显示拥塞通知。<br>利用ECN标记，来代替丢包，告知对方网络产生拥塞，需要降低滑动窗口大小，<br>从而避免TCP会话因丢包而重传</p><h3 id="5，管制和整形"><a href="#5，管制和整形" class="headerlink" title="5，管制和整形"></a>5，管制和整形</h3><p>policing，丢弃超出的数据包；超出部分的数据支持重标记；output<br>shaping，缓存超出的数据包，直到缓存区满为止；input&amp;output</p><p>令牌桶：<br>Bc：burst size 令牌桶的大小<br>Tc：time interval 加令牌的时间，多久加一次令牌<br>CIR：每秒往桶里加令牌的速率，决定了用户流量的大小，CIR = Bc / Tc</p><p>Be：第二个令牌的大小<br>PIR：向第二个令牌的添加令牌速率</p><p><strong>单速单桶</strong>：<br>单速单桶模式不允许流量突发，当用户的流量速率小于配置的CIR时，报文被认为是conform；当用户的流量大于CIR时直接被认为是exceed(思科exceed华为violate)。</p><p>(图中Tc代表桶里令牌的数量，CBS代表令牌桶的容量即Bc)<br><img src="/img/68e0aeafly1fxybrwa1koj20890bfweg.jpg"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果只配置CIR，不指定Bc，那么默认Bc等于1500bytes或者 CIR数值 / 32</span></span><br><span class="line"> <span class="built_in">class</span> <span class="number">100</span></span><br><span class="line">  police <span class="number">8000</span> conform-action transmit  exceed-action drop </span><br><span class="line"> <span class="built_in">class</span> <span class="number">200</span></span><br><span class="line">  police cir <span class="number">8000</span> conform-action transmit  exceed-action drop </span><br><span class="line"> <span class="built_in">class</span> <span class="number">300</span></span><br><span class="line">  police <span class="number">8000</span> <span class="number">1500</span> conform-action transmit  exceed-action drop </span><br><span class="line"> <span class="built_in">class</span> <span class="number">400</span></span><br><span class="line">  police cir <span class="number">8000</span> bc <span class="number">1500</span> conform-action transmit  exceed-action drop </span><br></pre></td></tr></table></figure><p><strong>单速双桶</strong>：<br>支持突发流量，用户的流量会出现三种结果：</p><ul><li>小于或等于CIR（也就是符合CIR） （conform）</li><li>大于CIR并小于或等于CIR与Be之和（也就是符合两个桶令牌之和）（exceed）</li><li>超过CIR与Be之和（也就是超过两个桶令牌之和）（violate）</li></ul><p>(图中Tc、Te代表桶里令牌的数量，CBS，EBS代表令牌桶的容量即Bc、Be)<br><img src="/img/68e0aeafly1fxybthilw4j20cd0bfaa4.jpg"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果只配置CIR、Bc，不指定Be，那么默认Be等于1500bytes或者CIR数值 / 32。</span></span><br><span class="line"> <span class="built_in">class</span> <span class="number">500</span></span><br><span class="line">  police <span class="number">8000</span> <span class="number">1000</span> conform-action transmit  exceed-action set-prec-transmit <span class="number">1</span> violate-action drop </span><br><span class="line"> <span class="built_in">class</span> <span class="number">600</span></span><br><span class="line">  police <span class="number">8000</span> <span class="number">1000</span> <span class="number">1300</span> conform-action transmit  exceed-action set-prec-transmit <span class="number">1</span> violate-action drop </span><br><span class="line"> <span class="built_in">class</span> <span class="number">700</span></span><br><span class="line">  police cir <span class="number">8000</span> bc <span class="number">1000</span> be <span class="number">1300</span> conform-action transmit  exceed-action set-prec-transmit <span class="number">1</span> violate-action drop </span><br></pre></td></tr></table></figure><p><strong>双速双桶</strong>：</p><p>(图中Tc、Tp代表桶里令牌的数量，CBS，PBS代表令牌桶的容量即Bc、Be)<br><img src="/img/68e0aeafly1fxybur6jb1j20cd0bfmx8.jpg"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">class</span> <span class="number">800</span></span><br><span class="line"> police cir <span class="number">8000</span> bc <span class="number">1000</span> pir <span class="number">8000</span> be <span class="number">1200</span> conform-action transmit  exceed-action transmit  violate-action drop </span><br></pre></td></tr></table></figure><h3 id="6，链路效率"><a href="#6，链路效率" class="headerlink" title="6，链路效率"></a>6，链路效率</h3><p>一般部署在低速广域网链路</p><ul><li>压缩，二层payload压缩；包含二层header和有效payload压缩</li><li>header压缩，对三IP，TCP，RTP的头部进行压缩</li><li>链路分片和交互式发送。</li></ul><h2 id="QoS的测试验证"><a href="#QoS的测试验证" class="headerlink" title="QoS的测试验证"></a>QoS的测试验证</h2><p>最早学习的时候，所有人都说模拟器只能敲QoS命令，无法验证效果，最对就是show policy-map interface 看下配置结果。<br>确实，模拟器没有真实的流量，也没有合适监控图表能实时显示流量。<br>这次复习QoS，我想试试能不能测试，首先是拿<a href="/docker-basic/">docker</a>启动一个<a href="/Centos7-deploy-zabbix3/">zabbix</a>容器，然后为了查看方便，虚机上还装了<a href="/grafana-zabbix-prometheus/">grafana</a>，这些工具之前都介绍过.</p><p>关于路由器镜像，IOL镜像不支持snmp；dynamic镜像支持snmp，但是接口流量好像不是实时的，大概1分钟才更新一次，在这1分钟内取多少次都不变（注：SNMP的大部分数值都是自增的，实际结果要取差值）；vIOS由于本身不是模拟器，而是虚拟的IOS，所以完美支持snmp功能，可以用于各种测试和监控。</p><p>关于QOS测试，效果比较好的就是流量整形了，我是拿两台路由器通过ping size产生的流量，以<code>shape average 500000</code>为例，结果如下图:</p><p><img src="/img/68e0aeafly1fy8z0uitlbj21ey0ja0w6.jpg" alt="shape average 500000"></p><p>然后，流量管制的效果不太理想，原因是我的流量太单一太少，数据包的大小都是固定的，这一秒令牌够的时候就转发，下一秒不够流量就是0，没能完美出图：</p><p><img src="/img/68e0aeafly1fy8zm1wo66j21cy0j041t.jpg" alt="police 500000 conform-action transmit  exceed-action drop"></p><p>参考文档<br><a href="http://support.huawei.com/enterprise/zh/doc/DOC1000069504">配置指南-QoS</a><br><a href="http://china-ccie.com/ccie/lilun/QOS/QOS.html#6">CCIE资料库→CCIE R&amp;S v4.0 理论→QOS</a><br><a href="http://www.net130.com/CMS/Pub/Tech/tech_zh/2007_11_13_57331.htm">思科QOS中的令牌桶算法</a><br><a href="https://blog.csdn.net/YEYUANGEN/article/details/20529793">qos令牌桶（Token Bucket）算法解析</a><br><a href="https://blog.csdn.net/alone_map/article/details/51863472">QOS-6 管制policing和整形shaping</a><br><a href="https://blog.csdn.net/kaoa000/article/details/78477774">QoS基础及技术原理——2</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;年底了，是时候整理下笔记了&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="QoS" scheme="http://nbma.info/tags/QoS/"/>
    
  </entry>
  
  <entry>
    <title>IS-IS路由协议</title>
    <link href="http://nbma.info/is-is-protocol/"/>
    <id>http://nbma.info/is-is-protocol/</id>
    <published>2018-11-28T11:34:57.000Z</published>
    <updated>2022-12-23T13:49:46.286Z</updated>
    
    <content type="html"><![CDATA[<p>前两天重新复习了ospf，说起链路状态协议，另一个is-is还没接触过，先了解下基本概念</p><span id="more"></span><p>is-is, Intermediate System to Intermediate System 中间系统到中间系统。</p><ul><li>ES, End System 终端系统，没有数据包转发能力的网络节点</li><li>IS, Intermediate System 中间系统，有数据包转发能力的网络节点，即路由器</li><li>Area, 区域，由一组连续的路由器、主机和连接他们的网络链路组成的实体。这里的区域是以路由器划分，而不是OSPF中的以接口划分。每台路由器只属于一个区域。</li><li>Domain, 域，理解成自治系统，由一组连续的Area组成。</li></ul><h2 id="IS-IS的角色"><a href="#IS-IS的角色" class="headerlink" title="IS-IS的角色"></a>IS-IS的角色</h2><ul><li><p>Level-1路由器，只负责区域内的路由，和其他具有L1功能的路由器构成L1区域，Level-1路由器必须通过Level-1-2路由器才能连接至其他区域。</p></li><li><p>Level-1/2路由器，同时具有L1和L2功能的路由器，类似OSPF的ABR设备，但他不向L1区域通告L2的路由</p></li><li><p>Level-2路由器，负责区域间的路由，路由域中Level-2级别的路由器必须是物理连续的，以保证骨干网的连续性。。只有Level-2级别的路由器才能直接与区域外的路由器交换数据报文或路由信息。</p></li></ul><h2 id="IS-IS的NET地址结构"><a href="#IS-IS的NET地址结构" class="headerlink" title="IS-IS的NET地址结构"></a>IS-IS的NET地址结构</h2><p>网络服务访问点NSAP（Network Service Access Point）是OSI协议中用于定位资源的地址。NSAP的地址结构如下图所示，它由IDP（Initial Domain Part）和DSP（Domain Specific Part）组成。IDP和DSP的长度都是可变的，NSAP总长最多是20个字节，最少8个字节。</p><p>在IS-IS路由选择过程中，没有使用NSAP地址中的NSEL，所以NSEL始终保持为00。当NSEL为00时，我们就称这个NSAP地址为NET（Network Entity Titile，网络实体名）地址，NET地址用来唯一地表示IS-IS路由选择域中的OSI主机。路由器使用NET地址来标识自己。<br>路由器在发送的链路状态数据包（LSP）中用NET来标识自己，这类似于OSPF发送的LSA中的路由器ID（Router ID）。</p><p><img src="/img/68e0aeafly1fxnssxkpxlj20e603haac.jpg"></p><p>具体字段就不解析了，其中的区域ID是可变长的，建议是用49开通的本地私有域；system ID建议全局唯一，NSEL在ip网络中没有使用，填0就行。</p><p>例子 1：net 49.0001.0000.0000.0001.00<br>代表 area = 49.0001; systemID = 0000.0000.0001; NSEL = 00.</p><p>例子 2：net ab.cdef.1234.5678.90ab.cdef.00<br>代表 area = ab.cdef.1234; systemID = 5678.90ab.cdef; NESL = 00.</p><h2 id="IS-IS的metric"><a href="#IS-IS的metric" class="headerlink" title="IS-IS的metric"></a>IS-IS的metric</h2><p>在思科路由器中，ISIS默认只使用default-metric 10来计算度量值，可以使用命令metric-style来引入Delay延时，Expense花销和Reliabilty可靠性来计算路由参考。<br>也可以直接在接口下修改metric值来影响选路</p><h2 id="IS-IS的配置示例"><a href="#IS-IS的配置示例" class="headerlink" title="IS-IS的配置示例"></a>IS-IS的配置示例</h2><p>这里用不同图标来表示不同角色的设备（R3,R5是level-2设备）</p><p><img src="/img/68e0aeafly1fxo0c72b1hj21aq0oyti7.jpg"></p><p>基本配置</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">router isis</span><br><span class="line"> net <span class="number">49.0001</span>.0000.0000.0001.00   <span class="comment">#net</span></span><br><span class="line"> is-type level-<span class="number">1</span></span><br><span class="line"></span><br><span class="line">interface Ethernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">16.1</span>.1.1 <span class="number">255.255</span>.255.0</span><br><span class="line"> ip router isis  <span class="comment">#接口下启用isis</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#接口下修改metric</span></span><br><span class="line">isis metric XXX &#123;level-<span class="number">1</span>/level-<span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure><p>常用的命令：</p><p>show isis topology #查看到达本区域的每个NET的metric和下一跳<br><img src="/img/68e0aeafly1fxo09gtbc3j211w0m8aeg.jpg"></p><p>show isis nei #查看邻居状态和角色类型<br><img src="/img/68e0aeafly1fxo08ew88uj2142090myt.jpg"></p><p>参考文档：<br>[1]. <a href="http://www.net130.com/ccnp/tech/ISISbj%20.pdf">IS-IS路由协议中文教程v1</a><br>[2]. <a href="https://cshihong.github.io/2018/01/08/ISIS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/">ISIS基础知识</a><br>[3]. <a href="http://blog.51cto.com/xuanbo/201504">IS-IS路由协议（一）</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;前两天重新复习了ospf，说起链路状态协议，另一个is-is还没接触过，先了解下基本概念&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>验证OSPF是不是一个纯链路状态协议</title>
    <link href="http://nbma.info/is-ospf-a-pure-link-status-protocol/"/>
    <id>http://nbma.info/is-ospf-a-pure-link-status-protocol/</id>
    <published>2018-11-26T06:25:43.000Z</published>
    <updated>2022-12-23T13:49:46.287Z</updated>
    
    <content type="html"><![CDATA[<p>复习的时候突然想到去年的一个面试题，虽然当时事后也找人认真讨论了，但是没有深入的研究，更别提结论了</p><span id="more"></span><p>要研究这个问题，先要明确链路状态协议的特点，<br>距离矢量协议的特点是，路由器学习到的路由是由邻居传递过来的，路由器本身不了解全网拓扑，只知道去往目的网段的跳数（“道听途说”）。<br>而链路状态协议的特点是，路由器彼此交互链路状态信息，每台路由器了解全网的邻接状态和链路状态，然后本地运行SPF算法计算得到最优路由。</p><p>而OSPF在同一区域内，确实符合链路状态协议的特点；但是在区域间并没有传递链路状态，只是传递了路由信息:网络号，掩码，metric。<br>根据以上得出，<strong>OSPF在区域内是纯链路状态协议，而在区域间更像是距离矢量行为</strong>。</p><p>验证的办法有两种：<br>1，区域间选路的“逐跳”行为<br>2，一个区域的路有更新，传递到其他区域，其他区域的路由并不会运行SPF算法</p><p>使用这个拓扑进行验证，上面是area 0，下面是area 1，R1R4都有环回口宣告进各自区域</p><img src="/img/68e0aeafly1fxln3rbprhj20ie0lsq4z.jpg" width="30%" height="30%" /><p>当路由收敛完毕后，查看R1的路由表，其中4.4.4.4/32这条显示的metric是31：</p><p><img src="/img/68e0aeafly1fxlmhcloy6j20ys0oygrr.jpg"></p><p>查看area 0内路由器的lsdb可以知道，R1从R2学习到的4.4.4.4/32的metric是11，从R3学习到的是101；而R1到达R2,R3的metric分别是10，20；<br>所以R1选择的路径是R1-R3-R2-R4.<br>但是，对数据包进行跟踪的话，实际的路径则是R1-R3-R4.</p><p><img src="/img/68e0aeafly1fxlmldaftlj20ym070dgy.jpg"></p><p>这是由于R3作为ABR，它从R4获得1类LSA，生成O表项的路由；从R2获得3类LSA，生成O IA表项的路由；优选O表项。不比较metric。</p><p>这种“逐条选路”的行为并不是链路状态协议的特点。</p><p>第二种方式的话，用一个命令就可以确认<code>sh ip os statistics</code></p><p>在area 1的R4上添加一一个环回口，宣告进area 1，等路有更新完毕后，分别在R1R4上执行这条命令：</p><p>可以看到，只有area 1的路由器执行了一次SPF算法：</p><p><img src="/img/68e0aeafly1fxln0mhsqlj20yq0ls0vg.jpg"></p><p><img src="/img/68e0aeafly1fxln0tgsidj20yi0lwdil.jpg"></p><p>分析完了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;复习的时候突然想到去年的一个面试题，虽然当时事后也找人认真讨论了，但是没有深入的研究，更别提结论了&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="ospf" scheme="http://nbma.info/tags/ospf/"/>
    
  </entry>
  
  <entry>
    <title>oxidized在部署使用中遇到的问题</title>
    <link href="http://nbma.info/oxidized-update/"/>
    <id>http://nbma.info/oxidized-update/</id>
    <published>2018-10-10T10:24:49.000Z</published>
    <updated>2022-12-23T13:49:46.288Z</updated>
    
    <content type="html"><![CDATA[<p>在生产部署oxidized的时候还是遇到了不少问题，这里整理出来：</p><span id="more"></span><h2 id="1-时区问题"><a href="#1-时区问题" class="headerlink" title="1. 时区问题"></a>1. 时区问题</h2><p>默认页面上显示的是UTC时间，需要修改一个js文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找js所在目录</span></span><br><span class="line">find / -name oxidized.js</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/rvm/gems/ruby-2.5.1/gems/oxidized-web-0.11.1/lib/oxidized/web/public/scripts/oxidized.js</span><br></pre></td></tr></table></figure><p>编辑js，注释掉56行，删掉57行的timezone部分：<br><img src="/img/68e0aeafly1fw2xvl3o8fj210y0guaei.jpg"><br>然后重启oxidized，刷新页面即可</p><h2 id="2-group问题"><a href="#2-group问题" class="headerlink" title="2. group问题"></a>2. group问题</h2><p>默认没有设置的情况下，所有设备都在default组里。<br>设置group需要同时修改config和source源：</p><p>config部分，添加上group字段的映射：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">source:</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">csv</span></span><br><span class="line">  <span class="attr">csv:</span></span><br><span class="line">    <span class="attr">file:</span> <span class="string">&quot;/root/.config/oxidized/router.db&quot;</span></span><br><span class="line">    <span class="attr">delimiter:</span> <span class="type">!ruby/regexp</span> <span class="string">/:/</span></span><br><span class="line">    <span class="attr">map:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">ip:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">group:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">model:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">username:</span> <span class="number">4</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">vars_map:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="number">6</span></span><br><span class="line">    <span class="attr">gpg:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>同一个group里的相同属性可以直接写在config里</p></blockquote><p>source部分，分配对应的group</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FW-5525X-017:192.168.1.1:Cisco:asa:admin:Admin@123:Enable@456</span><br><span class="line">AC-7205-02:192.168.1.2:Aruba:aosw:admin:Admin@123</span><br><span class="line">AS-5720-01:192.168.1.3:Huawei:vrp:admin:Admin@123</span><br><span class="line">AS-5130-POE-02:192.168.1.4:H3C:comware:admin:Admin@123</span><br></pre></td></tr></table></figure><p>重启后效果如图：</p><p><img src="/img/68e0aeafly1fw2yifx2tsj21c40s0jvp.jpg"></p><p><strong>配置完group之后建议在output里开启以下两个feature</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">output:</span><br><span class="line">  git:</span><br><span class="line">    single_repo: true</span><br><span class="line">    type_as_directory: true</span><br></pre></td></tr></table></figure><p>可以实现 将配置按照groups划分为文件夹。否则，oxidized将为每个group创建一个本地的git repo，从而导致push remote repo失败</p><h2 id="3-配置中的uptime问题"><a href="#3-配置中的uptime问题" class="headerlink" title="3. 配置中的uptime问题"></a>3. 配置中的uptime问题</h2><p>有些设备的配置中存在uptime字段，会导致每次git commit都提示设备配置有改变。<br>oxidized官方的脚本里仅支持了部分设备在commit之前忽略这部分。<br>我这里遇到两个漏网的，分别是山石网科的stoneos 和华为USG防火墙的vrp系统。</p><p>山石设备需要忽略的<code>show version</code>的<strong>Uptime</strong>和<code>show configration running</code>中ipsec的<strong>pre-share</strong>，其中pre-share的key本身是加密的，但是经过测试，隔一段时间再show的时候密文居然变了。</p><p>设备输出是这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># show version</span></span><br><span class="line">(...)</span><br><span class="line"> Built by buildmaster8 2017/04/28 18:22:25</span><br><span class="line"> </span><br><span class="line"> Uptime is 323 days 4 hours 4 minutes 20 seconds</span><br><span class="line"> System language is <span class="string">&quot;en&quot;</span></span><br><span class="line">(...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># show configration running</span></span><br><span class="line">(...)</span><br><span class="line">isakmp peer <span class="string">&quot;to XXX site&quot;</span></span><br><span class="line">  isakmp-proposal <span class="string">&quot;P1&quot;</span></span><br><span class="line">  pre-share <span class="string">&quot;ubKB5d7wZlMEWi5tyxsSfQl+G04BuQ&quot;</span></span><br><span class="line">  peer 1.2.3.4</span><br><span class="line">(...)</span><br></pre></td></tr></table></figure><p>根据以上格式，需要删除uptime所在行，以及替换加密的文本。修改ruby脚本如下（修改部分已添加注释）:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/rvm/gems/ruby-2.5.1/gems/oxidized-0.24.0/lib/oxidized/model/stoneos.rb</span></span><br><span class="line">(...)</span><br><span class="line">  cmd <span class="string">&#x27;show configuration running&#x27;</span> <span class="keyword">do</span> <span class="params">|cfg|</span></span><br><span class="line">    <span class="comment"># replace secret text</span></span><br><span class="line">    cfg.gsub! <span class="regexp">/pre-share (.*)/</span>, <span class="string">&#x27;pre-share &lt;secret hidden&gt;&#x27;</span></span><br><span class="line">    cfg</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  cmd <span class="string">&#x27;show version&#x27;</span> <span class="keyword">do</span> <span class="params">|cfg|</span></span><br><span class="line">    <span class="comment"># avoid commits due to uptime / Uptime is 323 days 4 hours 4 minutes 20 seconds</span></span><br><span class="line">    cfg = cfg.each_line.reject &#123; <span class="params">|line|</span> line.match /(Uptime\s+\d+\s+)<span class="params">|(.*seconds.*)/ &#125;</span></span><br><span class="line"><span class="params">    cfg = cfg.join</span></span><br><span class="line"><span class="params">    comment cfg</span></span><br><span class="line"><span class="params">  <span class="keyword">end</span></span></span><br><span class="line"><span class="params">(...)</span></span><br></pre></td></tr></table></figure><p>对于华为的USG防火墙，主要是每次运行display命令的时候，会先输出当前时间*<code>2018-10-10 15:16:50.440 +08:00</code>*，然后才是命令的内容；另外就是下面的Datebase Version的时间，防火墙的数据库更新也没必要触发配置变更：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;BJ_IPSEC&gt;disp version </span><br><span class="line">2018-10-10 15:16:50.440 +08:00</span><br><span class="line">Huawei Versatile Routing Platform Software</span><br><span class="line">VRP (R) Software, Version 5.170 (USG6300 V50...</span><br><span class="line">(...)</span><br><span class="line">AV Signature Database Version    :  </span><br><span class="line">SA Signature Database Version    : 2016070401  </span><br><span class="line">C&amp;C Domain Name Database Version :   </span><br><span class="line">Location Database Version        : 2015121515</span><br><span class="line">(...)</span><br></pre></td></tr></table></figure><p>修改的话就就类似uptime，直接过滤掉这一行再存储，这里使用固定的时区<code>08:00</code>作为过滤行的关键字：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/rvm/gems/ruby-2.5.1/gems/oxidized-0.24.0/lib/oxidized/model/vrp.rb</span></span><br><span class="line">(...)</span><br><span class="line">  cmd <span class="string">&#x27;display version&#x27;</span> <span class="keyword">do</span> <span class="params">|cfg|</span></span><br><span class="line">    cfg = cfg.each_line.reject &#123; <span class="params">|l|</span> l.match /08<span class="symbol">:</span><span class="number">00</span>/ &#125;.join</span><br><span class="line">    cfg = cfg.each_line.reject &#123; <span class="params">|l|</span> l.match /uptime/ &#125;.join</span><br><span class="line">    <span class="comment"># avoid commits due to Database auto update</span></span><br><span class="line">    cfg.gsub! <span class="regexp">/Database Version(\s+\:) (\d*)/</span>, <span class="string">&#x27;Database Version\1 &lt;date hidden&gt;&#x27;</span></span><br><span class="line">    comment cfg</span><br><span class="line">  <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>上面的<code>\1</code>指的将第一个括号匹配的部分填充到这个位置。</p><p>修改完成后，再获取配置就不会提示有变化了。</p><blockquote><p>这部分解决方案参考自<a href="https://github.com/ytti/oxidized/issues/1485">Github的issues</a>以及其他OS的脚本.</p></blockquote><h2 id="4-git-repo冲突问题"><a href="#4-git-repo冲突问题" class="headerlink" title="4. git repo冲突问题"></a>4. git repo冲突问题</h2><p>默认情况下是不会出现冲突问题，但是如果在其他地方修改提交了remote repo，本地的oxidized repo没有变。这个如何再运行oxidized的push remote repo就回提示fail，解决办法也很简单：<br>确认下config中output部分的git目录的路径，直接删除rm -rf这个目录即可。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在生产部署oxidized的时候还是遇到了不少问题，这里整理出来：&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="oxidized" scheme="http://nbma.info/tags/oxidized/"/>
    
  </entry>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="http://nbma.info/docker-basic/"/>
    <id>http://nbma.info/docker-basic/</id>
    <published>2018-10-01T06:38:30.000Z</published>
    <updated>2022-12-23T13:49:46.282Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。<br>Docker 运行在 CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、系统内核版本为 2.6.32-431 或者更高版本。</p><span id="more"></span><p>从 2017 年 3 月开始 docker 在原来的基础上分为两个分支版本: Docker CE 和 Docker EE。</p><p>Docker CE 即社区免费版，Docker EE 即企业版，强调安全，但需付费使用。</p><p>本文介绍 Docker CE 的安装使用。</p><h2 id="使用yum安装docker"><a href="#使用yum安装docker" class="headerlink" title="使用yum安装docker"></a>使用yum安装docker</h2><p>首先查看系统内核版本，来验证是否符合docker要求，通过<code>uname -r</code>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.21.1.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#移除旧版本</span></span><br><span class="line">yum remove docker \</span><br><span class="line">           docker-client \</span><br><span class="line">           docker-client-latest \</span><br><span class="line">           docker-common \</span><br><span class="line">           docker-latest \</span><br><span class="line">           docker-latest-logrotate \</span><br><span class="line">           docker-logrotate \</span><br><span class="line">           docker-selinux \</span><br><span class="line">           docker-engine-selinux \</span><br><span class="line">           docker-engine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装一些必要的系统工具</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加阿里的yum源</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新 yum 缓存：</span></span><br><span class="line">yum makecache fast</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装docker-ce</span></span><br><span class="line">yum -y install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="测试hello-world"><a href="#测试hello-world" class="headerlink" title="测试hello-world"></a>测试hello-world</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><img src="/img/68e0aeafly1fwrga1nr1mj20vo0sw7av.jpg"></p><p>使用docker ps可以查看当前正在运行的容器。</p><h2 id="使用脚本安装docker"><a href="#使用脚本安装docker" class="headerlink" title="使用脚本安装docker"></a>使用脚本安装docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"></span><br><span class="line">sudo sh get-docker.sh</span><br><span class="line"></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><p>由于某些原因，从官网拉取docker镜像十分缓慢，所以建议配置国内的镜像源。<br>这里使用163的docker镜像源<a href="http://hub-mirror.c.163.com/">http://hub-mirror.c.163.com</a></p><p>新版的 Docker 使用 /etc/docker/daemon.json（Linux） 或者 %programdata%\docker\config\daemon.json（Windows） 来配置 Daemon。</p><p>请在该配置文件中加入（没有该文件的话，请先建一个）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除docker-ce"><a href="#删除docker-ce" class="headerlink" title="删除docker-ce"></a>删除docker-ce</h2><p>执行以下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker-ce</span><br><span class="line">rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure><h2 id="常用命令参数"><a href="#常用命令参数" class="headerlink" title="常用命令参数"></a>常用命令参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run ubuntu:15.10 /bin/<span class="built_in">echo</span> <span class="string">&quot;Hello world&quot;</span></span><br></pre></td></tr></table></figure><p><code>run</code>:运行一个容器。</p><p><code>ubuntu:15.10</code>指定要运行的镜像，Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。</p><p><code>/bin/echo &quot;Hello world&quot;</code>: 在启动的容器里执行的命令</p><p>以上命令完整的意思可以解释为：Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo “Hello world”，然后输出结果。</p><hr><p>直接输入docker然后回车，可以看到docker支持的所有命令。比如run, build, images, pull等。<br>具体到每条命令可以用<code>docker COMMAND --help</code>查看使用方法</p><p>常用的一些：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">docker ps 查看正在运行的容器</span><br><span class="line">    -a 查看所有容器，包含stop的</span><br><span class="line">docker iamges 查看本机存在的docker镜像</span><br><span class="line">docker search httpd 查找远端docker仓库中的httpd镜像</span><br><span class="line">docker pull httpd 拉取镜像到本地</span><br><span class="line">docker run httpd 启动一个容器</span><br><span class="line">    -d 后台运行</span><br><span class="line">    -t 启动一个伪终端</span><br><span class="line">    -i 允许你对容器内的标准输入 (stdin) 进行交互</span><br><span class="line">    -P 将容器内部使用的网络端口映射到外部主机上，默认外部端口32769</span><br><span class="line">    -p 5001:5000 将外部5001端口映射到容器的5000端口</span><br><span class="line">    --name mydocker 将容器命名为mydocker</span><br><span class="line">    -v $PWD&#x2F;www:&#x2F;www 将主机中当前目录下的www挂载到容器的&#x2F;www</span><br><span class="line">docker logs &lt;NAME&gt;|&lt;HASH&gt; 查看容器内的标准输出</span><br><span class="line">    -f 类似tail -f一样来输出内部的stdout</span><br><span class="line">docker stop &lt;NAME&gt;|&lt;HASH&gt; 停止容器</span><br><span class="line">docker port &lt;NAME&gt;|&lt;HASH&gt; 查看容器端口映射情况</span><br><span class="line">docker start &lt;NAME&gt;|&lt;HASH&gt; 启动已经停止的容器</span><br><span class="line">docker top &lt;NAME&gt;|&lt;HASH&gt; 查看容器内部运行的进程</span><br><span class="line">docker rm &lt;NAME&gt;|&lt;HASH&gt; 删除不需要的容器，必须是在stop状态</span><br><span class="line">docker inspect &lt;NAME&gt;|&lt;HASH&gt; 查看 Docker 的底层信息，返回一个 JSON 文件记录着 Docker 容器的配置和状态信息</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。&lt;br&gt;Docker 运行在 CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、系统内核版本为 2.6.32-431 或者更高版本。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="docker" scheme="http://nbma.info/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>可能是目前最好用的网络配置备份工具-oxidized</title>
    <link href="http://nbma.info/maybe-the-best-conf-backup-tool-oxidized/"/>
    <id>http://nbma.info/maybe-the-best-conf-backup-tool-oxidized/</id>
    <published>2018-09-28T09:51:16.000Z</published>
    <updated>2019-01-12T02:07:44.057Z</updated>
    
    <content type="html"><![CDATA[<p>说起配置管理，一直我面临的头疼问题——企业网的设备品牌太多太杂了。<br>基本上很少有机会去使用厂商私有的配置管理工具。SolarWinds的KiWi CaTools是一个非常不错的商业解决方案，但是，应该没有多少公司会在信息化上投入太多成本吧。</p><span id="more"></span><p>之前我是从网上找的和谐版CaTools，不过由于版本太旧，只能支持部分品牌的设备，将就了大半年。正要准备用python的netmiko自己写一个的时候，发现了这个工具——oxidized。简单测试了下，已经能覆盖我司的全部设备。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>oxidized是一个轻量、可扩展的网络设备配置工具，目前能支持90多种操作系统。</p><ul><li>支持多线程</li><li>支持多种数据源（csv,db,http）</li><li>支持多种输出类型（file,git,http）</li><li>支持RESTful API</li></ul><p>Github项目地址：<a href="https://github.com/ytti/oxidized">oxidized</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>oxidized可以直接通过ruby的gem进行安装，也可以从docker启动:</p><h3 id="1-CentOS手动安装"><a href="#1-CentOS手动安装" class="headerlink" title="1. CentOS手动安装"></a>1. CentOS手动安装</h3><p>基于ruby，所以需要先把centos7上的ruby2.0升级到2.3版本，这里是有RVM来管理ruby版本。<br>首先是更新依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y curl gcc-c++ patch readline readline-devel zlib zlib-devel</span><br><span class="line">yum install -y libyaml-devel libffi-devel openssl-devel make cmake</span><br><span class="line">yum install -y bzip2 autoconf automake libtool bison iconv-devel libssh2-devel libicu-devel</span><br></pre></td></tr></table></figure><p>安装RVM前需要先导入gpg的公钥:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</span><br><span class="line"><span class="comment">#安装：</span></span><br><span class="line">curl -L get.rvm.io | bash -s stable</span><br></pre></td></tr></table></figure><p>最新的rvm安装完成之后，还需手动把当前用户添加到rvm组才行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#把root用户加入到rvm group</span></span><br><span class="line">usermod -a -G rvm root</span><br></pre></td></tr></table></figure><p>log out注销当前用户，然后再log in重新读取组信息，可以使用<code>groups</code>命令查看当前用户的数组，加入rvm组后可以执行rvm命令<br>设置RVM环境并编译，然后安装Ruby 2.3.0并设置为默认值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile.d/rvm.sh</span><br><span class="line">rvm install 2.3.0</span><br><span class="line">rvm use --default 2.3.0</span><br></pre></td></tr></table></figure><p>然后就可以通过Rubygems安装<code>oxidized</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gem install oxidized</span><br><span class="line">gem install oxidized-script oxidized-web</span><br><span class="line"><span class="comment"># 如果不想安装oxidized-web，需要在启动前从config里删除rest部分的配置</span></span><br></pre></td></tr></table></figure><p>安装完成后就可以进行初始配置了。</p><h3 id="2-docker启动"><a href="#2-docker启动" class="headerlink" title="2. docker启动"></a>2. docker启动</h3><p>首先需要创建一个配置文件的目录在宿主机上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/oxidized</span><br></pre></td></tr></table></figure><p>然后第一次运行容器，来生成初始配置文件：</p><blockquote><p>这一步仅用作生成config文件，如果已经有了，跳过这一步</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -v /etc/oxidized:/root/.config/oxidized -p 8888:8888/tcp -t oxidized/oxidized:latest oxidized</span><br></pre></td></tr></table></figure><p>这个时候<code>/etc/oxidized</code>下应该已经有了一个config文件，把它编辑成你想要的样子;</p><p>同时，创建数据源<code>/etc/oxidized/router.db</code>（下文具体解析config文件的内容和数据源格式）</p><p>正式启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /etc/oxidized:/root/.config/oxidized -p 8888:8888/tcp -t oxidized/oxidized:latest</span><br><span class="line"><span class="comment"># 成功启动后会看到如下信息：</span></span><br><span class="line">oxidized[1]: Oxidized starting, running as pid 1</span><br><span class="line">oxidized[1]: Loaded 1 nodes</span><br><span class="line">Puma 2.13.4 starting...</span><br><span class="line">* Min threads: 0, max threads: 16</span><br><span class="line">* Environment: development</span><br><span class="line">* Listening on tcp://0.0.0.0:8888</span><br></pre></td></tr></table></figure><h2 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h2><p>Oxidized的配置文件是用的yaml格式，文件默认读取目录是<code>/etc/oxidized/config</code>和<code>~/.config/oxidized/config</code>。<br>初次运行的时候会自动生成默认的<code>~/.config/oxidized/config</code></p><p>config文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">username:</span> <span class="string">username</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">password</span></span><br><span class="line"><span class="attr">model:</span> <span class="string">junos</span></span><br><span class="line"><span class="attr">resolve_dns:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">log:</span> <span class="string">/var/log/oxidized.log</span></span><br><span class="line"><span class="attr">interval:</span> <span class="number">3600</span></span><br><span class="line"><span class="attr">use_syslog:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">threads:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">timeout:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">retries:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">prompt:</span> <span class="type">!ruby/regexp</span> <span class="string">/^([\w.@-]+[#&gt;]\s?)$/</span></span><br><span class="line"><span class="attr">rest:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8888</span></span><br><span class="line"><span class="attr">next_adds_job:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">vars:</span> &#123;&#125;</span><br><span class="line"><span class="attr">groups:</span> &#123;&#125;</span><br><span class="line"><span class="attr">models:</span> &#123;&#125;</span><br><span class="line"><span class="attr">pid:</span> <span class="string">&quot;/root/.config/oxidized/pid&quot;</span></span><br><span class="line"><span class="attr">crash:</span></span><br><span class="line">  <span class="attr">directory:</span> <span class="string">&quot;/root/.config/oxidized/crashes&quot;</span></span><br><span class="line">  <span class="attr">hostnames:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">stats:</span></span><br><span class="line">  <span class="attr">history_size:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">input:</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">ssh,</span> <span class="string">telnet</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">ssh:</span></span><br><span class="line">    <span class="attr">secure:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">ftp:</span></span><br><span class="line">    <span class="attr">passive:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">utf8_encoded:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">output:</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">git:</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">Mansur</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">i@nbma.info</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">&quot;/root/.config/oxidized/backup_conf/devices.git&quot;</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">&quot;/root/.config/oxidized/configs&quot;</span></span><br><span class="line"><span class="attr">hooks:</span></span><br><span class="line">  <span class="attr">push_to_remote:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">githubrepo</span></span><br><span class="line">    <span class="attr">events:</span> [<span class="string">post_store</span>]</span><br><span class="line">    <span class="attr">user:</span> <span class="string">Mansur</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">i@nbma.info</span></span><br><span class="line">    <span class="attr">remote_repo:</span> <span class="string">git@nbma.info:mansur/test-oxidized.git</span></span><br><span class="line">    <span class="attr">publickey:</span> <span class="string">/root/.ssh/id_rsa.pub</span></span><br><span class="line">    <span class="attr">privatekey:</span> <span class="string">/root/.ssh/id_rsa</span></span><br><span class="line"><span class="attr">source:</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">csv</span></span><br><span class="line">  <span class="attr">csv:</span></span><br><span class="line">    <span class="attr">file:</span> <span class="string">&quot;/root/.config/oxidized/router.db&quot;</span></span><br><span class="line">    <span class="attr">delimiter:</span> <span class="type">!ruby/regexp</span> <span class="string">/:/</span></span><br><span class="line">    <span class="attr">map:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">ip:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">model:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">username:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">gpg:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">model_map:</span></span><br><span class="line">  <span class="attr">cisco:</span> <span class="string">ios</span></span><br><span class="line">  <span class="attr">juniper:</span> <span class="string">junos</span></span><br></pre></td></tr></table></figure><p>需要关注的内容不多：<br><code>username</code>, <code>password</code>, <code>model</code>这些无需修改，source文件里的相应字段会更优先;<br><code>interval</code>即是备份的周期；<br><code>rest</code>部分是oxidized-web生成的网页，可以直观的查看各个设备的备份状态，保持127.0.0.0，后面可以另外部署一个nginx用于代理和认证。<br>下面是其他几个比较重要的配置：</p><h3 id="1-source"><a href="#1-source" class="headerlink" title="1. source"></a>1. source</h3><p>定义了数据源，<code>map</code>是解析的字段映射：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">more /root/.config/oxidized/router.db</span><br><span class="line">S5720-05:192.168.1.2:vrp:admin:Admin@123</span><br><span class="line">C2960-01:192.168.1.3:ios:cisco:Cisco@123</span><br></pre></td></tr></table></figure><h3 id="2-output"><a href="#2-output" class="headerlink" title="2. output"></a>2. output</h3><ul><li>file 以文件方式输出</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output:</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">&quot;/root/.config/oxidized/configs&quot;</span></span><br></pre></td></tr></table></figure><ul><li>git 以git方式输出</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output:</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">git:</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">Mansur</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">i@nbma.info</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">&quot;/root/.config/oxidized/backup_conf/devices.git&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-hook"><a href="#3-hook" class="headerlink" title="3. hook"></a>3. hook</h3><p>hook需要先指定类型，然后通过监听事件event来执行相应的动作</p><ul><li>push_to_remote</li></ul><p>将配置保存到公司的gitlab是个不错的选择，可以方便直观的进行历史版本控制，以及进行配置对比。<br>push_to_remote能够运行的前提是output是以git方式进行输出。<br>先到gitlab上新建一个repo，然后上传key，修改oxidized的配置文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hooks:</span></span><br><span class="line">  <span class="attr">push_to_remote:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">githubrepo</span></span><br><span class="line">    <span class="attr">events:</span> [<span class="string">post_store</span>]</span><br><span class="line">    <span class="attr">user:</span> <span class="string">Mansur</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">i@nbma.info</span></span><br><span class="line">    <span class="attr">remote_repo:</span> <span class="string">git@nbma.info:mansur/test-oxidized.git</span></span><br><span class="line">    <span class="attr">publickey:</span> <span class="string">/root/.ssh/id_rsa.pub</span></span><br><span class="line">    <span class="attr">privatekey:</span> <span class="string">/root/.ssh/id_rsa</span></span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>准备好配置文件之后，就可以运行了，默认直接在bash里已经安装了<code>oxidized</code>命令；<br>使用<code>oxidized &amp;</code>来后台运行<br>或者启动一个screen，或者启动oxidied.service<br>查看日志，备份的file，或者git来确认备份进度</p><h2 id="其他feature"><a href="#其他feature" class="headerlink" title="其他feature"></a>其他feature</h2><h3 id="nginx的web验证"><a href="#nginx的web验证" class="headerlink" title="nginx的web验证"></a>nginx的web验证</h3><p>nginx安装之前有<a href="https://nbma.info/learn-nginx/">写过</a><br>账号密码的话，需要使用apache的httpd-tools来生成密码文件，或者不想安装的话，可以使用<a href="http://tool.oschina.net/htpasswd">在线 htpasswd 生成器</a></p><p>手动生成的话使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">htpasswd –c /home/htpasswd user1</span><br><span class="line"><span class="comment"># 回车之后，连续输入两次密码即可。后续添加用户不需要-c参数</span></span><br><span class="line">htpasswd /home/htpasswd user2</span><br></pre></td></tr></table></figure><p>然后，新建nginx配置文件：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name 192.168.1.1;</span><br><span class="line"></span><br><span class="line">        auth_basic &quot;oxidized web UI login&quot;;</span><br><span class="line">        auth_basic_user_file /home/htpasswd;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:8888/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        access_log /var/log/nginx/access_oxidized.log;</span><br><span class="line">        error_log /var/log/nginx/error_oxidized.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启nginx就可以了</p><h3 id="设备group"><a href="#设备group" class="headerlink" title="设备group"></a>设备group</h3><p>当网络设备足够多时，可以将设备分组，以实现对某些属性的批量管理。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;说起配置管理，一直我面临的头疼问题——企业网的设备品牌太多太杂了。&lt;br&gt;基本上很少有机会去使用厂商私有的配置管理工具。SolarWinds的KiWi CaTools是一个非常不错的商业解决方案，但是，应该没有多少公司会在信息化上投入太多成本吧。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="oxidized" scheme="http://nbma.info/tags/oxidized/"/>
    
  </entry>
  
  <entry>
    <title>一些不太好找的mib/oid</title>
    <link href="http://nbma.info/snmp-url/"/>
    <id>http://nbma.info/snmp-url/</id>
    <published>2018-09-27T07:38:57.000Z</published>
    <updated>2019-01-12T02:07:44.065Z</updated>
    
    <content type="html"><![CDATA[<p>不愿意花钱的公司，只能自力更生找开源方案一步一步的撸了。</p><span id="more"></span><p>收集一些不太常见的mib和oid的地址</p><h2 id="思科-cisco"><a href="#思科-cisco" class="headerlink" title="思科 cisco"></a>思科 cisco</h2><p>先是思科的ASA的温度，各大搜索引擎都没找到，最终在一个<a href="http://www.techspacekh.com/monitoring-cisco-asa-firewall-with-nagios-core-web-application/">nagios的脚本</a>里找到了如下内容：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### SNMP OIDs</span></span><br><span class="line"><span class="comment">###############</span></span><br><span class="line"><span class="comment"># Temperature</span></span><br><span class="line"><span class="keyword">my</span> $S_temp = <span class="string">&quot;.1.3.6.1.2.1.99.1.1.1.4&quot;</span>;</span><br><span class="line"><span class="comment"># Memory</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="comment"># 容易找的就直接略了</span></span><br></pre></td></tr></table></figure><h2 id="山石-hillstone"><a href="#山石-hillstone" class="headerlink" title="山石 hillstone"></a>山石 hillstone</h2><p>PDF: <a href="https://kb.hillstonenet.com/en/wp-content/uploads/2015/06/StoneOS_SNMP_MIB_Reference_Guide_5.5R1.pdf">StoneOS SNMP MIB Reference Guide</a></p><h2 id="华为-huawei"><a href="#华为-huawei" class="headerlink" title="华为 huawei"></a>华为 huawei</h2><h2 id="华三-H3C-HP"><a href="#华三-H3C-HP" class="headerlink" title="华三 H3C/HP"></a>华三 H3C/HP</h2><p><a href="http://certifiedgeek.weebly.com/blog/hp-comware-snmp-mib-for-cpu-memory-and-temperature">HP Comware SNMP MIB for CPU, Memory and Temperature</a></p><h2 id="Aruba"><a href="#Aruba" class="headerlink" title="Aruba"></a>Aruba</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;不愿意花钱的公司，只能自力更生找开源方案一步一步的撸了。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="monitor" scheme="http://nbma.info/tags/monitor/"/>
    
    <category term="snmp" scheme="http://nbma.info/tags/snmp/"/>
    
  </entry>
  
  <entry>
    <title>elk收集分析ASA日志</title>
    <link href="http://nbma.info/elk-conf/"/>
    <id>http://nbma.info/elk-conf/</id>
    <published>2018-09-06T06:13:17.000Z</published>
    <updated>2022-12-23T13:49:46.283Z</updated>
    
    <content type="html"><![CDATA[<p>在上一篇ELK安装测试的时候有下面这句：<br>input { stdin { } } output { stdout {codec =&gt;rubydebug} }<br>通过stdin{}读取cli的输入，然后以rubydebug输出到cli</p><span id="more"></span><p>上面就是一个简单的logstash配置文件。</p><p>下面以我收集ASA的日志为例，分析下配置文件的写法</p><p>首先是在ASA上配置syslog server</p><h2 id="ASA的syslog配置"><a href="#ASA的syslog配置" class="headerlink" title="ASA的syslog配置"></a>ASA的syslog配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">logging enable</span><br><span class="line">logging timestamp</span><br><span class="line">logging list VPN-USER message 302013</span><br><span class="line">logging list VPN-USER message 113039</span><br><span class="line">logging list VPN-USER message 113019</span><br><span class="line">logging trap VPN-USER</span><br><span class="line">logging facility 22</span><br><span class="line">logging host inside x.x.x.x</span><br></pre></td></tr></table></figure><p><code>logging list</code>定义了要传送给syslog server的日志列表，我找个几个有关SSLVPN的log message定义：</p><table><thead><tr><th>message ID</th><th>内容</th><th>备注</th></tr></thead><tbody><tr><td>113039</td><td>VPN user成功登陆</td><td>包含username，group-policy，remote-ip</td></tr><tr><td>113019</td><td>VPN user注销</td><td>同上</td></tr><tr><td>302013</td><td>VPN user发起一个TCP连接</td><td>包含username，src-ip，dst-ip等</td></tr><tr><td>302014</td><td>VPN user结束一个TCP连接</td><td>同上</td></tr><tr><td>302015</td><td>VPN user请求udp</td><td>同上</td></tr><tr><td>302016</td><td>VPN user接收udp</td><td>同上</td></tr><tr><td>302020</td><td>VPN user发起ICMP</td><td>同上</td></tr><tr><td>302021</td><td>VPN user接收ICMP</td><td>同上</td></tr></tbody></table><blockquote><p>更多ASA LOG message对应信息请查询<a href="https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog.html">思科官网文档</a></p></blockquote><p>除了list以外，logging trap也可以根据不用的日志等级来过滤发送，常用的是<code>logging trap informational</code></p><p>各个等级的大致描述如下<br><img src="/img/68e0aeafly1fuzyj5vciaj20rs0l9jtp.jpg"></p><p>此外，还有一条logging facility 22<br>facility用于区分不同类型的设备或进程产生的syslog，思科建议设置为21，22或23<br>这个值用于计算syslog的优先级，Priority = Facility * 8 + Level</p><hr><h2 id="logstash的配置"><a href="#logstash的配置" class="headerlink" title="logstash的配置"></a>logstash的配置</h2><p>logstash的配置文件包括三个部分：<code>input</code>, <code>filter</code>, <code>output</code>.<br>详解如下：</p><h3 id="input：定义数据源"><a href="#input：定义数据源" class="headerlink" title="input：定义数据源"></a>input：定义数据源</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    udp &#123; </span><br><span class="line">        port =&gt; <span class="string">&quot;514&quot;</span> </span><br><span class="line">        type =&gt; <span class="string">&quot;cisco-fw&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>udp</code>是指数据源的类型，还可以是从文件读取的<code>file</code>等<br><code>port =&gt; &quot;514&quot;</code>代表运行时监听udp514(默认sysLog端口)，如果要指定tcp协议，将上面<code>udp</code>替换为tcp即可。<br><code>type =&gt; &quot;cisco-fw&quot;</code>区别于其他数据源，指定一个type，用于后面filter中的if匹配</p><hr><h3 id="filter：解析数据格式"><a href="#filter：解析数据格式" class="headerlink" title="filter：解析数据格式"></a>filter：解析数据格式</h3><p>filter负责将日志解析为key-value的字段，其格式可以形容为伪代码吧，其中有一些特定的内置<em>函数</em>。<br>我的filter中主要有grok，syslog_pri，geoip，mutate这4部分。<br>(这里我解析了302013和113039的日志，其他日志只存储)</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># more logstash_syslog.conf</span></span><br><span class="line">filter &#123;</span><br><span class="line"> <span class="keyword">if</span> [type] == <span class="string">&quot;cisco-fw&quot;</span> &#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">      match =&gt; [<span class="string">&quot;message&quot;</span>, <span class="string">&quot;%&#123;CISCO_TAGGED_SYSLOG&#125; %&#123;GREEDYDATA:cisco_message&#125;&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> syslog_pri &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Parse ASA-6-302013</span></span><br><span class="line"><span class="keyword">if</span> [ciscotag] == <span class="string">&quot;ASA-6-302013&quot;</span> &#123;</span><br><span class="line">  grok &#123;</span><br><span class="line">    match =&gt; [</span><br><span class="line">        <span class="string">&quot;cisco_message&quot;</span>, <span class="string">&quot;%&#123;CISCOFW302013_302014_302015_302016&#125;&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Parse ASA-6-113039</span></span><br><span class="line"><span class="keyword">if</span> [ciscotag] == <span class="string">&quot;ASA-6-113039&quot;</span> &#123;</span><br><span class="line"> grok &#123;</span><br><span class="line">   match =&gt; &#123; <span class="string">&quot;cisco_message&quot;</span> =&gt; <span class="string">&quot;&lt;(?&lt;groupname&gt;[\w\-]+)&gt;\sUser\s&lt;(?&lt;usrename&gt;[\w\-\./@\\]+)&gt;\sIP\s&lt;(?&lt;ipaddr&gt;[\d\.]+)&gt;\sAnyConnect\sparent&quot;</span> &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">if</span> [ipaddr] != <span class="string">&quot;172.17.0.1&quot;</span> &#123;</span><br><span class="line"> geoip &#123;</span><br><span class="line">              source =&gt; <span class="string">&quot;ipaddr&quot;</span></span><br><span class="line">              target =&gt; <span class="string">&quot;geoip&quot;</span></span><br><span class="line">              database =&gt; <span class="string">&quot;/opt/logstash/databases/GeoLite2-City/GeoLite2-City.mmdb&quot;</span></span><br><span class="line">              add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][longitude]&#125;&quot;</span> ]</span><br><span class="line">              add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][latitude]&#125;&quot;</span>  ]</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">         mutate &#123;</span><br><span class="line">             convert =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;float&quot;</span>]</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    mutate &#123;</span><br><span class="line">  remove_field =&gt; [ <span class="string">&quot;message&quot;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面对结合例子对着5部分进行分析，以ASA-6-302013这条日志为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;182&gt;May 07 2018 13:26:42: %ASA-6-302014: Built inbound TCP connection 76009711 for inside:172.17.44.167&#x2F;54514 (172.17.44.167&#x2F;54514)(LOCAL\\xiaoming) to inside:192.168.115.37&#x2F;5061 (192.168.115.37&#x2F;5061) (xiaoming)</span><br></pre></td></tr></table></figure><h4 id="Grok"><a href="#Grok" class="headerlink" title="Grok"></a>Grok</h4><p>Grok使用特定的patterns（内置或者是自定义的正则）来匹配日志中的各种元素，并提取到指定字段里。<br>上面第一个if内的CISCO_TAGGED_SYSLOG就是logstash中内置的一个patterns，它的作用是取得这条日志的优先级<code>syslog_pri</code>，时间戳<code>timestamp</code>，产生日志的主机<code>sysloghost</code>(可选)和日志类型<code>ciscotag</code>。对应匹配表达式是这样的：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CISCO_TAGGED_SYSLOG ^&lt;%&#123;POSINT:syslog_pri&#125;&gt;%&#123;CISCOTIMESTAMP:timestamp&#125;( %&#123;SYSLOGHOST:sysloghost&#125;)? ?: %%&#123;CISCOTAG:ciscotag&#125;:</span><br></pre></td></tr></table></figure><blockquote><p>有关logstash内置的匹配patterns，可以在官方源码中查看：<a href="https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/firewalls">github链接</a></p></blockquote><p>所以，上面的日志经过第一个Grok解析生成以下字段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">syslog_pri = <span class="number">182</span></span><br><span class="line">timestamp = May <span class="number">07</span> <span class="number">2015</span> <span class="number">13</span>:<span class="number">26</span>:<span class="number">42</span></span><br><span class="line">sysloghost =</span><br><span class="line">ciscotag = ASA-<span class="number">6</span>-<span class="number">302013</span></span><br></pre></td></tr></table></figure><p>剩余的部分*”Built inbound TCP… (xiaoming)”<em>会作为<code>cisco_message</code>，用于后面</em>%{CISCOFW302013_302014_302015_302016}*详细解析:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;dst_ip&quot;</span>: <span class="string">&quot;192.168.115.37&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;syslog_pri&quot;</span>: <span class="string">&quot;182&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;dst_mapped_port&quot;</span>: <span class="string">&quot;5061&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;syslog_facility_code&quot;</span>: <span class="number">22</span>,</span><br><span class="line">    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cisco-fw&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;ciscotag&quot;</span>: <span class="string">&quot;ASA-6-302013&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;cisco_message&quot;</span>: <span class="string">&quot;Built inbound TCP connection 76009711 for inside:172.17.44.167/54514 (172.17.44.167/54514)(LOCAL\\xiaoming) to inside:192.168.115.37/5061 (192.168.115.37/5061) (xiaoming)\n&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;timestamp&quot;</span>: <span class="string">&quot;May 07 2015 13:26:42&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;syslog_severity_code&quot;</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">&quot;src_port&quot;</span>: <span class="string">&quot;54514&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;syslog_severity&quot;</span>: <span class="string">&quot;informational&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;src_mapped_port&quot;</span>: <span class="string">&quot;54514&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;syslog_facility&quot;</span>: <span class="string">&quot;local6&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;dst_port&quot;</span>: <span class="string">&quot;5061&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;dst_mapped_ip&quot;</span>: <span class="string">&quot;192.168.115.37&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;src_fwuser&quot;</span>: <span class="string">&quot;LOCAL\\xiaoming&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;src_ip&quot;</span>: <span class="string">&quot;172.17.44.167&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;host&quot;</span>: <span class="string">&quot;172.17.0.17&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@timestamp&quot;</span>: <span class="string">&quot;2015-05-07T13:26:05.652Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;src_interface&quot;</span>: <span class="string">&quot;inside&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;dst_interface&quot;</span>: <span class="string">&quot;inside&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;src_mapped_ip&quot;</span>: <span class="string">&quot;172.17.44.167&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;TCP&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@version&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;action&quot;</span>: <span class="string">&quot;Built&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;direction&quot;</span>: <span class="string">&quot;inbound&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;connection_id&quot;</span>: <span class="string">&quot;76009711&quot;</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><hr><h4 id="syslog-pri"><a href="#syslog-pri" class="headerlink" title="syslog_pri"></a>syslog_pri</h4><p>syslog_pri的作用是从syslog中解析PRI（优先级）字段，如果没有设置该优先级，默认为13.<br>之前在ASA有配置logging facility 22，前面介绍过。就不多说了</p><p>根据公式，facility，level和Priority的对应关系如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">            emergency   alert   critical   error   warning   notice   info   debug</span><br><span class="line">kernel              0       1          2       3         4        5      6       7</span><br><span class="line">user                8       9         10      11        12       13     14      15</span><br><span class="line">mail               16      17         18      19        20       21     22      23</span><br><span class="line">system             24      25         26      27        28       29     30      31</span><br><span class="line">security           32      33         34      35        36       37     38      39</span><br><span class="line">syslog             40      41         42      43        44       45     46      47</span><br><span class="line">lpd                48      49         50      51        52       53     54      55</span><br><span class="line">nntp               56      57         58      59        60       61     62      63</span><br><span class="line">uucp               64      65         66      67        68       69     70      71</span><br><span class="line">time               72      73         74      75        76       77     78      79</span><br><span class="line">security           80      81         82      83        84       85     86      87</span><br><span class="line">ftpd               88      89         90      91        92       93     94      95</span><br><span class="line">ntpd               96      97         98      99       100      101    102     103</span><br><span class="line">logaudit          104     105        106     107       108      109    110     111</span><br><span class="line">logalert          112     113        114     115       116      117    118     119</span><br><span class="line">clock             120     121        122     123       124      125    126     127</span><br><span class="line">local0            128     129        130     131       132      133    134     135</span><br><span class="line">local1            136     137        138     139       140      141    142     143</span><br><span class="line">local2            144     145        146     147       148      149    150     151</span><br><span class="line">local3            152     153        154     155       156      157    158     159</span><br><span class="line">local4            160     161        162     163       164      165    166     167</span><br><span class="line">local5            168     169        170     171       172      173    174     175</span><br><span class="line">local6            176     177        178     179       180      181    182     183</span><br><span class="line">local7            184     185        186     187       188      189    190     191</span><br></pre></td></tr></table></figure><hr><h4 id="mutate"><a href="#mutate" class="headerlink" title="mutate"></a>mutate</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mutate &#123;</span><br><span class="line">  remove_field =&gt; [ <span class="string">&quot;message&quot;</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上所见，mutate可以增加和删除某个字段。支持<code>remove_field</code>, <code>add_tag</code>等<br>移除多余的字段可以有效的减小日志的字节数，更高效的存储。</p><hr><h4 id="GeoIP"><a href="#GeoIP" class="headerlink" title="GeoIP"></a>GeoIP</h4><p>用于获取ip地址的地理位置信息。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ciscotag] == <span class="string">&quot;ASA-6-113039&quot;</span> &#123;</span><br><span class="line"> grok &#123;</span><br><span class="line">   match =&gt; &#123; <span class="string">&quot;cisco_message&quot;</span> =&gt; <span class="string">&quot;&lt;(?&lt;groupname&gt;[\w\-]+)&gt;\sUser\s&lt;(?&lt;usrename&gt;[\w\-\./@\\]+)&gt;\sIP\s&lt;(?&lt;ipaddr&gt;[\d\.]+)&gt;\sAnyConnect\sparent&quot;</span> &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> geoip &#123;</span><br><span class="line">              source =&gt; <span class="string">&quot;ipaddr&quot;</span></span><br><span class="line">              target =&gt; <span class="string">&quot;geoip&quot;</span></span><br><span class="line">              database =&gt; <span class="string">&quot;/opt/logstash/databases/GeoLite2-City/GeoLite2-City.mmdb&quot;</span></span><br><span class="line">              add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][longitude]&#125;&quot;</span> ]</span><br><span class="line">              add_field =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;%&#123;[geoip][latitude]&#125;&quot;</span>  ]</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">         mutate &#123;</span><br><span class="line">             convert =&gt; [ <span class="string">&quot;[geoip][coordinates]&quot;</span>, <span class="string">&quot;float&quot;</span>]</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里主要对113039中的remote-ip进行解析。logstash内置的表达式中没有对ASA-6-113039日志的匹配。</p><p>一条ASA-6-113039的日志经过上面的grok解析之后，<code>cisco_message</code>内容如下：</p><figure class="highlight re"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Group &lt;ssl-policy&gt; User &lt;xiaoming&gt; IP &lt;<span class="number">116.87</span>.<span class="number">87.164</span>&gt; AnyConnect parent session started.</span><br></pre></td></tr></table></figure><p>分别是用户所在安全组，用户名，用户拨入VPN时的源IP地址，使用正则表达式提取到这三部分内容。<br>这里推荐使用kibana内置的dev tools调试表达式，直接预览最终效果</p><p><img src="/img/68e0aeafly1fwchs62brhj21n80rq0xg.jpg"></p><p>拿到用户拨入VPN时的remote-ip地址<code>ipaddr</code>，传给geoip的<code>source</code>，解析出对应的geo信息：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&quot;geoip&quot;: &#123;</span><br><span class="line">     &quot;country_code3&quot;: &quot;SG&quot;,</span><br><span class="line">     &quot;country_name&quot;: &quot;Singapore&quot;,</span><br><span class="line">     &quot;region_code&quot;: &quot;01&quot;,</span><br><span class="line">     &quot;continent_code&quot;: &quot;AS&quot;,</span><br><span class="line">     &quot;timezone&quot;: &quot;Asia/Singapore&quot;,</span><br><span class="line">     &quot;country_code2&quot;: &quot;SG&quot;,</span><br><span class="line">     &quot;region_name&quot;: &quot;Central Singapore Community Development Council&quot;,</span><br><span class="line">     &quot;city_name&quot;: &quot;Singapore&quot;,</span><br><span class="line">     &quot;longitude&quot;: 103.8558,</span><br><span class="line">     &quot;ip&quot;: &quot;116.87.87.164&quot;,</span><br><span class="line">     &quot;latitude&quot;: 1.2931,</span><br><span class="line">     &quot;coordinates&quot;: [</span><br><span class="line">       103.8558,</span><br><span class="line">       <span class="number">1.2931</span></span><br><span class="line">     ],</span><br><span class="line">     &quot;location&quot;: &#123;</span><br><span class="line">       &quot;lat&quot;: 1.2931,</span><br><span class="line">       &quot;lon&quot;: 103.8558</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><p><strong>坑：</strong></p><blockquote><p>需要注意的是，如果想在kibana的map中显示，那么location的字段类型不能是string，需要转换为geo_point类型。实际上，logstash默认的模板中已经支持了对geoip中location类型的转换，只需要在logstash output中输出到es的索引名字是<code>logstash-*</code><br>详细请看<a href="https://www.elastic.co/blog/geoip-in-the-elastic-stack">elk官方博客分析</a></p></blockquote><hr><h4 id="Date"><a href="#Date" class="headerlink" title="* Date"></a>* Date</h4><p>当产生日志的host设备时间不准确时可以也考虑添加date，使用接收日志时的logstash server时间作为日志时间戳。 </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">date &#123;</span><br><span class="line">  match =&gt; [<span class="string">&quot;timestamp&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MMM dd HH:mm:ss&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MMM  d HH:mm:ss&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MMM dd yyyy HH:mm:ss&quot;</span>,</span><br><span class="line">  <span class="string">&quot;MMM  d yyyy HH:mm:ss&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Date是从第一个grok过滤器获取时间戳值，并将其设置为放入elasticsearch时的timestamp。<br>es默认使用接收到log的时间作为event发生的时间，而设置了date之后，可以用log中timestamp作为记录依据。<br>所以，在ASA上配置ntp十分有必要。</p><hr><h3 id="output：输出"><a href="#output：输出" class="headerlink" title="output：输出"></a>output：输出</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;172.17.40.52:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;logstash-asa-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没什么好说的了，host是指定es的地址，index指定索引名，坑已踩。</p><p>sysLog日志的收集部分就是这样了，分析的话，等我再研究下看看有没有什么好分享的。</p><p><img src="/img/68e0aeafly1fv11hkv32uj21im13ee81.jpg"></p><p>参考文档：<br>[1] <a href="https://jackhanington.com/blog/2015/06/16/send-cisco-asa-syslogs-to-elasticsearch-using-logstash/">Send Cisco ASA Syslogs to Elasticsearch Using Logstash</a><br>[2] <a href="https://jackhanington.com/blog/2014/04/21/using-logstash-elasticsearch-and-kibana-for-cisco-asa-syslog-message-analysis/">Using Logstash, Elasticsearch and Kibana for Cisco ASA Syslog Message Analysis.</a><br>[3] <a href="https://www.boyuee.cn/%E6%97%A5%E5%BF%97/2018/03/05/ELK%E5%85%A8%E5%AE%B6%E6%A1%B6/#%E5%85%B3%E4%BA%8Egeoip%E7%9A%84%E9%85%8D%E7%BD%AE">关于geoip的配置 - ELK全家桶</a><br>[4] <a href="https://birdben.github.io/2017/01/23/ELK/ELK%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89ELK%E5%88%A9%E7%94%A8GeoIP%E8%BF%9B%E8%A1%8C%E5%9C%B0%E7%90%86%E5%AE%9A%E4%BD%8D/">ELK利用GeoIP进行地理定位</a><br>[5] <a href="https://autofei.wordpress.com/2017/01/11/visualize-geo-location-of-log-using-elasticsearch-logstash-kibana/">Visualize Geo location of log using Elasticsearch + Logstash + Kibana</a><br>[6] <a href="https://success.trendmicro.com/solution/TP000086250-What-are-Syslog-Facilities-and-Levels">What are Syslog Facilities and Levels?</a><br>[7] <a href="https://community.cisco.com/t5/vpn-and-anyconnect/cisco-asa-5510-vpn-login-history/td-p/2090555">Cisco ASA 5510 VPN login history</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在上一篇ELK安装测试的时候有下面这句：&lt;br&gt;input { stdin { } } output { stdout {codec =&amp;gt;rubydebug} }&lt;br&gt;通过stdin{}读取cli的输入，然后以rubydebug输出到cli&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="monitor" scheme="http://nbma.info/tags/monitor/"/>
    
    <category term="asa" scheme="http://nbma.info/tags/asa/"/>
    
    <category term="SSLVPN" scheme="http://nbma.info/tags/SSLVPN/"/>
    
    <category term="elk" scheme="http://nbma.info/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>elk部署</title>
    <link href="http://nbma.info/elk-setup/"/>
    <id>http://nbma.info/elk-setup/</id>
    <published>2018-08-14T02:11:56.000Z</published>
    <updated>2019-01-12T02:07:44.043Z</updated>
    
    <content type="html"><![CDATA[<hr><p>在centos7上安装elk6.x版本<br>Logstash是一个用于收集，解析和存储日志以供将来使用的开源工具。<br>Kibana是一个Web界面，可用于搜索和查看Logstash索引的日志。<br>这两个工具都基于Elasticsearch，用于存储日志。</p><span id="more"></span><p>Logstash可以用于收集所有类型的日志，但我们将本教程的范围限制为syslog收集<br>于Elasticsearch可以多节点集群存储。本文只有一台设备同时部署三个组件。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>先安装java</p><p><code>yum -y install java-1.8.0-openjdk*</code></p><p>修改LIMIT参数：<br><code>vim /etc/security/limits.conf</code><br>增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* soft nproc 65535</span><br><span class="line">* hard nproc 65535</span><br><span class="line">* soft nofile 65535</span><br><span class="line">* hard nofile 65535</span><br></pre></td></tr></table></figure><p>添加虚拟内存</p><p><code>vim /etc/sysctl.conf</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>通过<code>sysctl -p</code> 查看虚拟内存</p><p> </p><h2 id="安装ES，及插件"><a href="#安装ES，及插件" class="headerlink" title="安装ES，及插件"></a>安装ES，及插件</h2><p>基本环境准备好之后开始安装elasticsearch</p><p>首先导入key:<br><code>rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</code></p><p>配置repo:</p><p><code>vim /etc/yum.repos.d/elasticsearch.repo</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[elasticsearch-6.x] </span><br><span class="line">name=Elasticsearch repository <span class="keyword">for</span> 6.x packages </span><br><span class="line">baseurl=https://artifacts.elastic.co/packages/6.x/yum </span><br><span class="line">gpgcheck=1 </span><br><span class="line">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch </span><br><span class="line">enabled=1 </span><br><span class="line">autorefresh=1 </span><br><span class="line"><span class="built_in">type</span>=rpm-md</span><br></pre></td></tr></table></figure><p>直接yum安装<br><code>yum -y install elasticsearch</code> </p><p>等待完成之后进行初始配置<br>创建数据存放目录：<br>mkdir -p /data/es-data<br>修正文件夹权限：<br>chown -R elasticsearch:elasticsearch /data/es-data<br>chown -R elasticsearch:elasticsearch /var/log/elasticsearch/<br> <br>修改ES配置文件<br><code>vim /etc/elasticsearch/elasticsearch.yml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep ^[a-zA-Z].*  /etc/elasticsearch/elasticsearch.yml</span></span><br><span class="line"><span class="comment"># 集群名</span></span><br><span class="line">cluster.name: SPE-Net-ELK</span><br><span class="line"><span class="comment"># 节点名</span></span><br><span class="line">node.name: node-1</span><br><span class="line">path.data: /data/es-data</span><br><span class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line"><span class="comment"># cors配置是为了后面的elasticsearch-head插件</span></span><br><span class="line">http.cors.enabled: <span class="literal">true</span></span><br><span class="line">http.cors.allow-origin: <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><p>启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> elasticsearch.service</span><br><span class="line"></span><br><span class="line">sudo systemctl start elasticsearch.service</span><br></pre></td></tr></table></figure><p>启动之后访问<a href="http://localhost:9200/">http://localhost:9200/</a> 显示以下类似的json确认ES正常</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;node-1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cluster_name&quot;</span> : <span class="string">&quot;SPE-Net-ELK&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;Ks1EF807Qn2ZZhvFLPdQTg&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;number&quot;</span> : <span class="string">&quot;6.3.2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_flavor&quot;</span> : <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_type&quot;</span> : <span class="string">&quot;rpm&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_hash&quot;</span> : <span class="string">&quot;053779d&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_date&quot;</span> : <span class="string">&quot;2018-07-20T05:20:23.451332Z&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;lucene_version&quot;</span> : <span class="string">&quot;7.3.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;5.6.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;5.0.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="安装es-head插件（可选）"><a href="#安装es-head插件（可选）" class="headerlink" title="安装es head插件（可选）"></a>安装es head插件（可选）</h3><p>安装git和node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br><span class="line">wget https://nodejs.org/dist/v0.10.30/node-v0.10.30-linux-x64.tar.gz</span><br><span class="line">tar --strip-components 1 -zxvf node-v* -C /usr/<span class="built_in">local</span></span><br><span class="line">node --version</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span><br><span class="line"><span class="built_in">cd</span> elasticsearch-head</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><blockquote><p>Head插件phantomjs解压问题:<br>解决办法,系统提供的lib解压有问题,安装bzip2即可: yum -y install bzip2</p><p>Head插件phantomjs权限问题:<br>解决办法: npm install -g</p></blockquote><p>运行，<br>npm run start<br>open <a href="http://localhost:9100/">http://localhost:9100/</a><br>可以查看到es集群的节点信息</p><h2 id="安装logstash"><a href="#安装logstash" class="headerlink" title="安装logstash"></a>安装logstash</h2><p>直接yum -y install logstash 的话由于是从海外aws下载速度较慢，建议自行下载rpm包（<a href="https://www.elastic.co/downloads/logstash">https://www.elastic.co/downloads/logstash</a> ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-6.3.2.rpm</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">rpm -ivh logstash-6.3.2.rpm </span><br><span class="line"><span class="comment"># 启动输入输出测试</span></span><br><span class="line">/usr/share/logstash/bin/logstash -e <span class="string">&#x27;input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;codec =&gt;rubydebug&#125; &#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>后面真正需要运行的时候，需要配合配置文件启动，这些下次再写</p><blockquote><p>/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/syslog-asa.conf &amp;</p></blockquote><h2 id="安装kibana"><a href="#安装kibana" class="headerlink" title="安装kibana"></a>安装kibana</h2><p>同样，提前下载包<br>官网（<a href="https://www.elastic.co/downloads/kibana">https://www.elastic.co/downloads/kibana</a> ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-6.3.2-linux-x86_64.tar.gz`</span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -zxvf kibana-6.3.2-linux-x86_64.tar.gz `</span><br><span class="line">mv kibana-6.3.2-linux-x86_64 /usr/<span class="built_in">local</span>`</span><br></pre></td></tr></table></figure><p>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /usr/local/kibana-6.3.2-linux-x86_64/config/kibana.yml </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep ^[a-zA-Z].* /usr/local/kibana-6.3.2-linux-x86_64/config/kibana.yml</span></span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">elasticsearch.url: <span class="string">&quot;http://x.x.x.x:9200&quot;</span></span><br><span class="line">logging.dest: /var/<span class="built_in">log</span>/kibana.log</span><br></pre></td></tr></table></figure><p> 启动<br><code>/usr/local/kibana-6.3.2-linux-x86_64/bin/kibana &amp;</code></p><p>打开<a href="http://localhost:5601/">http://localhost:5601</a> 即可看到kibana安装成功。</p><p>关于logstash的配置文件，详见下篇案例解析：<a href="https://nbma.info/elk-conf/">elk收集分析ASA日志</a></p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;
&lt;p&gt;在centos7上安装elk6.x版本&lt;br&gt;Logstash是一个用于收集，解析和存储日志以供将来使用的开源工具。&lt;br&gt;Kibana是一个Web界面，可用于搜索和查看Logstash索引的日志。&lt;br&gt;这两个工具都基于Elasticsearch，用于存储日志。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="monitor" scheme="http://nbma.info/tags/monitor/"/>
    
    <category term="elk" scheme="http://nbma.info/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>使用xtrabackup备份还原mysql</title>
    <link href="http://nbma.info/mysql-xtrabackup/"/>
    <id>http://nbma.info/mysql-xtrabackup/</id>
    <published>2018-06-26T10:29:21.000Z</published>
    <updated>2019-01-12T02:07:44.058Z</updated>
    
    <content type="html"><![CDATA[<p>xtrabackup是一种物理备份工具，通过协议连接到mysql服务端，然后读取并复制innodb底层的”数据块”，完成所谓的”物理备份”。支持在线热备份（备份时不影响数据读写）。<br>相对于mysqldump的逻辑备份还原快了太多了。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>最新版看<a href="https://www.percona.com/downloads">https://www.percona.com/downloads</a><br>下载rpm包：<br><code>wget https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.9/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.9-1.el7.x86_64.rpm</code><br>yum安装：<br><code>yum install percona-xtrabackup-24-2.4.9-1.el7.x86_64.rpm</code></p><h2 id="全量备份"><a href="#全量备份" class="headerlink" title="全量备份"></a>全量备份</h2><p>将备份的文件存放在/backup目录下</p><p><code>innobackupex --defaults-file=/etc/my.cnf --user=root --password=123123 /backup</code></p><p>备份完成后会显示 ok字样</p><h2 id="全量备份的还原"><a href="#全量备份的还原" class="headerlink" title="全量备份的还原"></a>全量备份的还原</h2><p>1.先prepare，利用–apply-log的作用是通过回滚未提交的事务及同步已经提交的事务至数据文件使数据文件处于一致性状态。<br>备份出的数据并不能直接使用，因为备份出的数据是不一致的，我们还需要将同时备份出的事务日志应用到备份中，才能得到一份完整、一致、可用的数据，xtrabackup称这一步操作为prepare，也就是还原数据前的”准备”工作。</p><p><code>innobackupex --apply-log /backup/2018-06-23_10-53-51/</code></p><p>在事务日志容量很大的情况下，可以使用–use-memory选项加速，在不指定内存大小的情况下，默认会占用100MB的内存。</p><p>2.copy：需要数据目录为空</p><p><code>innobackupex --defaults-file=/etc/my.cnf --copy-back /backup/2018-06-23_10-53-51/</code></p><p>3.改权限</p><p><code>chown -R mysql:mysql /var/lib/mysql/</code></p><h2 id="指定库-表备份还原"><a href="#指定库-表备份还原" class="headerlink" title="指定库/表备份还原"></a>指定库/表备份还原</h2><p>备份加参数–databases=”dba_test xtra_test”（多个库用空格隔开，指定表直接加点zabbix.history）<br>prepare过程一样。<br>还原，因为是部分备份，不能直接用–copy-back，只能手动来复制需要的库，也要复制ibdata(数据字典）</p><p>参考文档：<br><a href="https://www.cnblogs.com/zhoujinyi/p/5893333.html">xtrabackup 使用说明</a><br><a href="https://blog.csdn.net/fanren224/article/details/79693863">xtrabackup</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;xtrabackup是一种物理备份工具，通过协议连接到mysql服务端，然后读取并复制innodb底层的”数据块”，完成所谓的”物理备份”。支持在线热备份（备份时不影响数据读写）。&lt;br&gt;相对于mysqldump的逻辑备份还原快了太多了。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="mysql" scheme="http://nbma.info/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>在CentOS7上开启和挂载NFS共享</title>
    <link href="http://nbma.info/centos-mount-nfs/"/>
    <id>http://nbma.info/centos-mount-nfs/</id>
    <published>2018-06-26T09:14:51.000Z</published>
    <updated>2019-01-12T02:07:44.034Z</updated>
    
    <content type="html"><![CDATA[<p>在CentOS7上开启和挂载NFS共享</p><p>NFS：Network File System 网络文件系统，可以让电脑在本地直接管理远端的硬盘。依赖RPC.<br>RPC：Remote Procedure Call 远程过程调用，计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。</p><span id="more"></span><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>关闭防火墙和selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装nfs和rpc</span></span><br><span class="line">yum install -y rpc-bind nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置要共享的目录</span></span><br><span class="line">cat /etc/exports</span><br><span class="line">/share (rw,no_root_squash)</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动nfs和rpcbind</span></span><br><span class="line">systemctl start nfs</span><br><span class="line">systemctl start rpcbind</span><br></pre></td></tr></table></figure><p><code>exports</code>的文件格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;输出目录&gt; 客户端（选项:访问权限,用户映射,其他]</span><br><span class="line"> </span><br><span class="line">输出目录是指NFS系统中所定义的共享给客户端使用的文件系统</span><br><span class="line"></span><br><span class="line">客户端是定义网络中可以访问这个NFS共享目录的IP地址或网段或域名等</span><br><span class="line">客户端常用的指定方式</span><br><span class="line">       指定ip地址的主机：192.168.100.1</span><br><span class="line">       指定一个子网：192.168.100.0&#x2F;24 也可以写成:192.168.100.0&#x2F;255.255.255.0</span><br><span class="line">       指定域名的主机：david.bsmart.cn</span><br><span class="line">       指定域中的所有主机：*.bsmart.cn</span><br><span class="line">       所有主机：*</span><br><span class="line"></span><br><span class="line">选项用来设置输出目录的访问权限、用户映射等。</span><br><span class="line">    NFS主要有3类选项：</span><br><span class="line">        设置输出目录只读：ro</span><br><span class="line">        设置输出目录读写：rw</span><br><span class="line">    用户映射选项</span><br><span class="line">        all_squash：将远程访问的所有普通用户及所属组都映射为匿名用户或用户组（nfsnobody）；</span><br><span class="line">no_all_squash：与all_squash取反（默认设置）；</span><br><span class="line">root_squash：将root用户及所属组都映射为匿名用户或用户组（默认设置）；</span><br><span class="line">no_root_squash：与rootsquash取反；</span><br><span class="line">anonuid&#x3D;xxx：将远程访问的所有用户都映射为匿名用户，并指定该用户为本地用户（UID&#x3D;xxx）；</span><br><span class="line">anongid&#x3D;xxx：将远程访问的所有用户组都映射为匿名用户组账户，并指定该匿名用户组账户为本地用户组账户（GID&#x3D;xxx）；</span><br><span class="line">    其它选项</span><br><span class="line">        secure：限制客户端只能从小于1024的tcp&#x2F;ip端口连接nfs服务器（默认设置）；</span><br><span class="line">insecure：允许客户端从大于1024的tcp&#x2F;ip端口连接服务器；</span><br><span class="line">sync：将数据同步写入内存缓冲区与磁盘中，效率低，但可以保证数据的一致性；</span><br><span class="line">async：将数据先保存在内存缓冲区中，必要时才写入磁盘；</span><br><span class="line">wdelay：检查是否有相关的写操作，如果有则将这些写操作一起执行，这样可以提高效率（默认设置）；</span><br><span class="line">no_wdelay：若有写操作则立即执行，应与sync配合使用；</span><br><span class="line">subtree：若输出目录是一个子目录，则nfs服务器将检查其父目录的权限(默认设置)；</span><br><span class="line">no_subtree：即使输出目录是一个子目录，nfs服务器也不检查其父目录的权限，这样可以提高效率；</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>客户端如果不按照nfs的话默认是识别不了nfs的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7-copy ~]# mount 10.211.55.21:&#x2F;share &#x2F;home&#x2F;media&#x2F;</span><br><span class="line">mount: 文件系统类型错误、选项错误、10.211.55.21:&#x2F;share 上有坏超级块、</span><br><span class="line">       缺少代码页或助手程序，或其他错误</span><br><span class="line">       (对某些文件系统(如 nfs、cifs) 您可能需要</span><br><span class="line">       一款 &#x2F;sbin&#x2F;mount.&lt;类型&gt; 助手程序)</span><br><span class="line"></span><br><span class="line">       有些情况下在 syslog 中可以找到一些有用信息- 请尝试</span><br><span class="line">       dmesg | tail  这样的命令看看。</span><br></pre></td></tr></table></figure><p>所以需要先安装<code>yum -y install nfs-utils</code><br>经过测试，并不需要启动服务，装上就行</p><p>挂载测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS7-copy ~]# mount 10.211.55.21:&#x2F;share &#x2F;home&#x2F;media&#x2F;</span><br><span class="line">[root@CentOS7-copy ~]# dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;home&#x2F;media&#x2F;file2 bs&#x3D;1M count&#x3D;10</span><br><span class="line">记录了10+0 的读入</span><br><span class="line">记录了10+0 的写出</span><br><span class="line">10485760字节(10 MB)已复制，0.0422486 秒，248 MB&#x2F;秒</span><br><span class="line">[root@CentOS7-copy ~]# ll &#x2F;home&#x2F;media&#x2F;</span><br><span class="line">总用量 20484</span><br><span class="line">-rw-r--r-- 1 root root 10485760 6月  26 14:35 file1</span><br><span class="line">-rw-r--r-- 1 root root 10485760 6月  26 14:42 file2</span><br><span class="line">drwxr-xr-x 2 root root     4096 6月  26 14:33 sixsixsix</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://my.oschina.net/renpingsheng/blog/913643">在CentOS7上实现NFS共享</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在CentOS7上开启和挂载NFS共享&lt;/p&gt;
&lt;p&gt;NFS：Network File System 网络文件系统，可以让电脑在本地直接管理远端的硬盘。依赖RPC.&lt;br&gt;RPC：Remote Procedure Call 远程过程调用，计算机通信协议。该协议允许运行于一台计算机的程序调用另一台计算机的子程序，而程序员无需额外地为这个交互作用编程。&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="centos" scheme="http://nbma.info/tags/centos/"/>
    
    <category term="nfs" scheme="http://nbma.info/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>ASA对VPN策略的处理过程</title>
    <link href="http://nbma.info/asa-vpn-policy-proc/"/>
    <id>http://nbma.info/asa-vpn-policy-proc/</id>
    <published>2018-05-11T07:47:09.000Z</published>
    <updated>2019-01-12T02:07:44.032Z</updated>
    
    <content type="html"><![CDATA[<p>ASA收到VPN请求，由tunnel-group来识别VPN类型(L2L or 远程拨号 or SSLVPN)，然后使用tunnel-group中的认证方法（LOCAL or Radius）进行认证，认证通过后经过以下5个关联属性叠加，得到用户的最终的策略</p><span id="more"></span><p>1.<strong>用户属性</strong><br>2.<strong>用户属性中关联的group-policy</strong><br>3.<strong>tunnel-group中关联的group-policy</strong><br>4.<strong>系统默认的group-policy:<code>DfltGrpPolicy</code></strong><br>5.<strong>tunnel-group的属性</strong></p><p>这5个策略优先级从高到低，存在重复项时，优先使用最先匹配到的策略。</p><h2 id="tunnel-group"><a href="#tunnel-group" class="headerlink" title="tunnel-group"></a>tunnel-group</h2><p>tunnel-group用于终结VPN连接。一个VPN请求到达VPN，ASA找到一个与之关联的tunnel-group，tunnel-group为每一个成员定义了VPN连接的脚本。</p><h3 id="L2L-VPN"><a href="#L2L-VPN" class="headerlink" title="- L2L VPN"></a>- L2L VPN</h3><p>当一个L2L VPN抵达ASA，ASA通过这次请求源IP（对端加密点）来查询本地的tunnel-group,如果有一个有一个tunnel-group的名字等于该IP，那么就使用tunnel-group内的pre-shared-key对这次VPN进行认证。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tunnel-group 61.128.1.1 type ipsec-l2l</span><br><span class="line"> pre-shared-key IPSECKEY</span><br></pre></td></tr></table></figure><h3 id="EZVPN"><a href="#EZVPN" class="headerlink" title="- EZVPN"></a>- EZVPN</h3><p>EZVPN的第一阶段认证group的名字必须能和tunnel-group名字一致</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tunnel-group EZGROUP type remote-access</span><br><span class="line">tunnel-group EZGROUP general-<span class="built_in">attributes</span></span><br><span class="line"> <span class="comment">#就类似路由器在group里设置一样，地址池可以在这里敲。但是更推荐在group-policy里设置</span></span><br><span class="line"> address-pool EZPOOL</span><br><span class="line"> <span class="comment">#默认是LOCAL认证</span></span><br><span class="line"> <span class="comment">#authentication-server-group LOCAL</span></span><br><span class="line">tunnel-group EZGROUP ipsec-<span class="built_in">attributes</span></span><br><span class="line"> ikev1 pre-shared-key EZVPNKEY</span><br></pre></td></tr></table></figure><h3 id="SSL-VPN"><a href="#SSL-VPN" class="headerlink" title="- SSL VPN"></a>- SSL VPN</h3><p>SSLVPN直接使用默认的<code>DefaultWEBVPNGroup</code>的tunnel-group<br>show run all tunnel-group可以看到该部分配置</p><p>另外还有两个默认的tunnel-group分别对应L2L和远程接入VPN：<br><code>DefaultL2LGroup</code>适用于对端peer地址不固定的时候配置预共享密钥<br><code>DefaultRAGroup</code>适用于拨号VPN(如L2TP over IPSec)</p><hr><h2 id="group-policy"><a href="#group-policy" class="headerlink" title="group-policy"></a>group-policy</h2><p>可以在多个地方调用：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在user属性里调用</span></span><br><span class="line">username ASAuser <span class="built_in">attributes</span></span><br><span class="line"> vpn-group-policy user-group-policy</span><br><span class="line"></span><br><span class="line"><span class="comment">#在tunnel-group里调用</span></span><br><span class="line">tunnel-group EZGROUP general-<span class="built_in">attributes</span></span><br><span class="line"> default-group-policy TUNNEL-GROUP-POLICY</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;ASA收到VPN请求，由tunnel-group来识别VPN类型(L2L or 远程拨号 or SSLVPN)，然后使用tunnel-group中的认证方法（LOCAL or Radius）进行认证，认证通过后经过以下5个关联属性叠加，得到用户的最终的策略&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="asa" scheme="http://nbma.info/tags/asa/"/>
    
    <category term="ipsec" scheme="http://nbma.info/tags/ipsec/"/>
    
    <category term="SSLVPN" scheme="http://nbma.info/tags/SSLVPN/"/>
    
    <category term="EZVPN" scheme="http://nbma.info/tags/EZVPN/"/>
    
  </entry>
  
  <entry>
    <title>ezvpn原理基本介绍</title>
    <link href="http://nbma.info/ezvpn-base/"/>
    <id>http://nbma.info/ezvpn-base/</id>
    <published>2018-05-10T10:26:39.000Z</published>
    <updated>2019-01-12T02:07:44.044Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="协商过程"><a href="#协商过程" class="headerlink" title="协商过程"></a>协商过程</h2><h3 id="第1阶段"><a href="#第1阶段" class="headerlink" title="第1阶段"></a>第1阶段</h3><span id="more"></span><p>AM模式，不预选协商DH Group强度，所以必须强制指定group2<br>三个包，因为省略了第一阶段前四个包。<br>第1个包client先发自己支持的策略，组名和预共享密钥<br>第2个包server使用PSK认证client<br>第3个包完成协商</p><h3 id="1-5阶段"><a href="#1-5阶段" class="headerlink" title="1.5阶段"></a>1.5阶段</h3><p>XAUTH：认证用户（用户名密码/AAA）<br>MODE-CFG：推送策略</p><h3 id="第2阶段"><a href="#第2阶段" class="headerlink" title="第2阶段"></a>第2阶段</h3><p>快速模式，三个包</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="第1阶段-1"><a href="#第1阶段-1" class="headerlink" title="第1阶段"></a>第1阶段</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp policy <span class="number">20</span></span><br><span class="line"> encr <span class="number">3</span>des</span><br><span class="line"> authentication pre-share</span><br><span class="line"> group <span class="number">2</span></span><br><span class="line"></span><br><span class="line">crypto isakmp client configuration group GROUP</span><br><span class="line"> key NBMAKEY</span><br></pre></td></tr></table></figure><h3 id="1-5阶段-1"><a href="#1-5阶段-1" class="headerlink" title="1.5阶段"></a>1.5阶段</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置xauth</span></span><br><span class="line">aaa new-model</span><br><span class="line">aaa authentication login EZ-XAUTH local</span><br><span class="line">aaa authorization network EZ-MODE-CFG local </span><br><span class="line"></span><br><span class="line">username cisco password <span class="number">0</span> cisco</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置策略</span></span><br><span class="line">ip local pool POOL <span class="number">11.11</span>.11.10 <span class="number">11.11</span>.11.110</span><br><span class="line"></span><br><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> pool POOL</span><br></pre></td></tr></table></figure><p>启用aaa之后建议在设备上开启线下保障策略，确保任何时候都可以使用console口</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aaa new</span><br><span class="line">aaa authentication login noacs line none</span><br><span class="line">line con <span class="number">0</span></span><br><span class="line"> login authen noacs</span><br><span class="line">line aux <span class="number">0</span></span><br><span class="line"> login authen noacs</span><br></pre></td></tr></table></figure><h3 id="第2阶段-1"><a href="#第2阶段-1" class="headerlink" title="第2阶段"></a>第2阶段</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">crypto ipsec transform-set TRANS esp-<span class="number">3</span>des esp-sha-hmac </span><br><span class="line"> mode tunnel</span><br><span class="line"></span><br><span class="line">crypto dynamic-map DYNAMIC-MAP <span class="number">20</span></span><br><span class="line"> set transform-set TRANS </span><br><span class="line"></span><br><span class="line"><span class="comment">#全局开启Xauth</span></span><br><span class="line">crypto map EZVPN client authentication <span class="built_in">list</span> EZ-XAUTH</span><br><span class="line">crypto map EZVPN isakmp authorization <span class="built_in">list</span> EZ-MODE-CFG</span><br><span class="line"></span><br><span class="line"><span class="comment">#启用客户端配置响应</span></span><br><span class="line">crypto map EZVPN client configuration address respond </span><br><span class="line"></span><br><span class="line"><span class="comment">#动态关联静态</span></span><br><span class="line">crypto map EZVPN <span class="number">20</span> ipsec-isakmp dynamic DYNAMIC-MAP</span><br><span class="line"></span><br><span class="line">interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> crypto map EZVPN</span><br></pre></td></tr></table></figure><p>当一台设备同时配置EzVPN和L2L VPN时，由于启用了全局的xauth认证，所以正常的L2L将无法进行第二阶段协商。<br>解决办法有两个。一是在配置pre-sharkey的时候，指定使用该key的peer不进行xauth。命令</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp key XXXXX address <span class="number">61.128</span>.1.1 no-xauth</span><br></pre></td></tr></table></figure><p>二是使用isakmp profile。</p><h2 id="isakmp-profile"><a href="#isakmp-profile" class="headerlink" title="isakmp profile"></a>isakmp profile</h2><p>ipsec profile的作用是对tunnel口的流量进行保护。而isakmp profile的作用主要是将一阶段的策略和第二阶段的策略进行绑定。常规配置的ipsec存在多个isakmp policy的时候，一二阶段协商过程是逐个查找从小到大进行匹配，并没有绑定对应的关系。</p><p>isakmp profile通过<code>match identity</code>来匹配远端设备，如EZVPN的<code>group</code>，L2L的peer <code>address</code>等。</p><p>修改上面的配置</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#去掉全局的配置</span></span><br><span class="line">no crypto map EZVPN client authentication <span class="built_in">list</span> EZ-XAUTH</span><br><span class="line">no crypto map EZVPN isakmp authorization <span class="built_in">list</span> EZ-MODE-CFG</span><br><span class="line">no crypto map EZVPN client configuration address respond </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建profile，匹配group,加入上面的1.5阶段配置</span></span><br><span class="line">crypto isakmp profile EZVPN-PROF</span><br><span class="line"> match identity group EZ-GROUP</span><br><span class="line"> client authentication <span class="built_in">list</span> EZ-XAUTH</span><br><span class="line"> isakmp authorization <span class="built_in">list</span> EZ-MODE-CFG</span><br><span class="line"> client configuration address respond </span><br><span class="line"></span><br><span class="line"><span class="comment">#在dynamic map下调用</span></span><br><span class="line">crypto dynamic-map DYNAMIC-MAP <span class="number">20</span></span><br><span class="line"> set isakmp-profile EZVPN-PROF</span><br></pre></td></tr></table></figure><p>L2L IPSec VPN修改：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">crypto keyring L2L-keyring  </span><br><span class="line">  pre-shared-key address <span class="number">61.128</span>.1.1 key NBMA-KEY</span><br><span class="line"></span><br><span class="line">crypto isakmp policy <span class="number">10</span></span><br><span class="line"> encr <span class="number">3</span>des</span><br><span class="line"> authentication pre-share</span><br><span class="line"> group <span class="number">2</span></span><br><span class="line"></span><br><span class="line">crypto isakmp profile L2L-PROFILE</span><br><span class="line"> keyring L2L-keyring</span><br><span class="line"> match identity address <span class="number">61.128</span>.1.1 <span class="number">255.255</span>.255.255 </span><br><span class="line"></span><br><span class="line">crypto ipsec transform-set L2L-SET esp-des esp-md5-hmac </span><br><span class="line"> mode tunnel</span><br><span class="line"></span><br><span class="line">crypto map DJ-MAP <span class="number">10</span> ipsec-isakmp </span><br><span class="line"> set peer <span class="number">61.128</span>.1.1</span><br><span class="line"> set transform-set L2L-SET </span><br><span class="line"> set isakmp-profile L2L-PROFILE</span><br><span class="line"> match address BJZB-YZIDC</span><br></pre></td></tr></table></figure><p>关于isakmp profile调用的位置：<strong>和转换集transform-set在一起调用</strong></p><h2 id="ezvpn特性"><a href="#ezvpn特性" class="headerlink" title="ezvpn特性"></a>ezvpn特性</h2><h3 id="隧道分离"><a href="#隧道分离" class="headerlink" title="隧道分离"></a>隧道分离</h3><p>默认EZVPN是tunnel-everything，所有流量包括直连的局域网的流量全都走到远端。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#源是远端网络，目的是any，到客户端看到的是一条目的路由</span></span><br><span class="line">ip access-<span class="built_in">list</span> extended tunnel-split</span><br><span class="line"> permit ip <span class="number">10.0</span>.0.0 <span class="number">0.0</span>.255.255 <span class="built_in">any</span></span><br><span class="line"></span><br><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> acl tunnel-split</span><br></pre></td></tr></table></figure><h3 id="save-password"><a href="#save-password" class="headerlink" title="save-password"></a>save-password</h3><p>默认不允许客户端保存password，可以通过策略启用</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> save-password</span><br></pre></td></tr></table></figure><h3 id="backup-gateway"><a href="#backup-gateway" class="headerlink" title="backup-gateway"></a>backup-gateway</h3><p>备用网关，当EZVPN server不可用时，根据策略配置的backup-gateway发起连接请求</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> backup-gateway second.nbma.info</span><br><span class="line"> backup-gateway <span class="number">61.128</span>.1.1</span><br></pre></td></tr></table></figure><h3 id="banner"><a href="#banner" class="headerlink" title="banner"></a>banner</h3><p>连接成功之后弹出banner</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> banner ^welcome to nbma!^</span><br></pre></td></tr></table></figure><h2 id="硬件客户端"><a href="#硬件客户端" class="headerlink" title="硬件客户端"></a>硬件客户端</h2><p>使用思科路由器作为客户端,有3中连接模式client/network-extension/network-plus</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">crypto ispec client EZ-CLIENT</span><br><span class="line"> connect [manual/auto]</span><br><span class="line"> group EZ-GROUP key NBMAKEY</span><br><span class="line"> mode [client/network-extension/network-plus]</span><br><span class="line"> peer <span class="number">61.128</span>.1.1</span><br><span class="line"> <span class="comment">#若果server启用了save-password:</span></span><br><span class="line"> username cisco password cisco</span><br><span class="line"></span><br><span class="line">interface f1/<span class="number">0</span></span><br><span class="line"> crypto ipsec client ezvpn EZ-CLIENT outside</span><br><span class="line"></span><br><span class="line">interface f1/<span class="number">1</span></span><br><span class="line"> crypto ipsec client ezvpn EZ-CLIENT inside</span><br></pre></td></tr></table></figure><p>手动连接：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#发起连接</span></span><br><span class="line">crypto ipsec client ezvpn connect</span><br><span class="line"><span class="comment">#调出“弹窗”</span></span><br><span class="line">crypto ipsec client ezvpn xauth</span><br><span class="line">输入用户名密码</span><br></pre></td></tr></table></figure><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><p><strong>client模式</strong>：客户端身后网络被转换成客户端获取的IP地址，客户端能访问server身后网络，反过来不行<br><strong>network-extension模式</strong>：不获取地址，两边使用真实地址，可相互访问<br><strong>network-plus模式</strong>：获取一个IP，用户server身后网络来网管客户端设备，其他和extension模式一样</p><h2 id="DVTI技术"><a href="#DVTI技术" class="headerlink" title="DVTI技术"></a>DVTI技术</h2><p>之前的硬件客户端没有生成tunnel口，所以不支持动态路由、组播、QOS、acl、vrf等</p><h3 id="server配置"><a href="#server配置" class="headerlink" title="server配置"></a>server配置</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp policy <span class="number">20</span></span><br><span class="line"> encr <span class="number">3</span>des</span><br><span class="line"> authentication pre-share</span><br><span class="line"> group <span class="number">2</span></span><br><span class="line"></span><br><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> key NBMAKEY</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置xauth</span></span><br><span class="line">aaa new-model</span><br><span class="line">aaa authentication login EZ-XAUTH local</span><br><span class="line">aaa authorization network EZ-MODE-CFG local </span><br><span class="line"></span><br><span class="line">username cisco password <span class="number">0</span> cisco</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果只是DVTI的话，不需要配置pool。配置之后同时支持软件拨入</span></span><br><span class="line"><span class="comment">#ip local pool POOL 11.11.11.10 11.11.11.110</span></span><br><span class="line"><span class="comment">#crypto isakmp client configuration group EZ-GROUP</span></span><br><span class="line"><span class="comment"># pool POOL</span></span><br><span class="line"></span><br><span class="line">ip access-<span class="built_in">list</span> extended tunnel-split</span><br><span class="line"> permit ip <span class="number">10.0</span>.0.0 <span class="number">0.0</span>.255.255 <span class="built_in">any</span></span><br><span class="line"></span><br><span class="line">crypto isakmp client configuration group EZ-GROUP</span><br><span class="line"> acl tunnel-split</span><br><span class="line"></span><br><span class="line">crypto isakmp porfile IKS-PROF</span><br><span class="line"> match identity group EZ-GROUP</span><br><span class="line"> client authentication <span class="built_in">list</span> EZ-XAUTH</span><br><span class="line"> isakmp authorization <span class="built_in">list</span> EZ-MODE-CFG</span><br><span class="line"> client configuration address respond</span><br><span class="line"> virtual-template <span class="number">100</span></span><br><span class="line"></span><br><span class="line">crypto ipsec transform-set TRANS esp-<span class="number">3</span>des esp-sha-hmac </span><br><span class="line"> mode tunnel</span><br><span class="line"></span><br><span class="line">crypto ipsec profile IPS-PROF</span><br><span class="line"> set transform-set TRANS</span><br><span class="line"> set isakmp-profile IKS-PROF</span><br><span class="line"></span><br><span class="line">interface Virtual-Template <span class="number">100</span> type tunnel</span><br><span class="line"> <span class="comment">#借一个有ip地址的接口</span></span><br><span class="line"> ip unnumbered f0/<span class="number">0</span></span><br><span class="line"> tunnel source f0/<span class="number">0</span></span><br><span class="line"> tunnel mode ipsec ipv4</span><br><span class="line"> tunnel protection ipsec profile IPS-PROF</span><br></pre></td></tr></table></figure><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">interface Virtual-Template <span class="number">56</span> type tunnel</span><br><span class="line"> <span class="comment">#借一个有ip地址的接口</span></span><br><span class="line"> ip unnumbered f0/<span class="number">0</span></span><br><span class="line"></span><br><span class="line">crypto ipsec client ezvpn DVTI-VPN</span><br><span class="line"> connect auto</span><br><span class="line"> group EZ-GROUP key NBMAKEY</span><br><span class="line"> mode network-extension</span><br><span class="line"> peer <span class="number">61.128</span>.1.1</span><br><span class="line"> virtual-interface <span class="number">56</span></span><br><span class="line"></span><br><span class="line">interface f1/<span class="number">0</span></span><br><span class="line"> crypto ipsec client ezvpn DVTI-VPN outside</span><br><span class="line"></span><br><span class="line">interface f1/<span class="number">1</span></span><br><span class="line"> crypto ipsec client ezvpn DVTI-VPN inside</span><br></pre></td></tr></table></figure><p>连接： </p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#发起连接</span></span><br><span class="line">crypto ipsec client ezvpn connect</span><br><span class="line"><span class="comment">#调出“弹窗”</span></span><br><span class="line">crypto ipsec client ezvpn xauth</span><br><span class="line">输入用户名密码</span><br></pre></td></tr></table></figure><p>客户端生成一个隧道分离的静态路由，出接口是virtual access口.<br>服务器自动生成一个客户端inside网段的静态路由，出接口是virtual access口</p><p>跑动态路由的话，只能在接口下配置，不能用network宣告，因为虚模板没地址</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#server端</span></span><br><span class="line">interface Virtual-Template <span class="number">100</span> type tunnel</span><br><span class="line"> ip ospf <span class="number">1</span> area <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#client端</span></span><br><span class="line">interface Virtual-Template <span class="number">56</span> type tunnel</span><br><span class="line"> ip ospf <span class="number">1</span> area <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;协商过程&quot;&gt;&lt;a href=&quot;#协商过程&quot; class=&quot;headerlink&quot; title=&quot;协商过程&quot;&gt;&lt;/a&gt;协商过程&lt;/h2&gt;&lt;h3 id=&quot;第1阶段&quot;&gt;&lt;a href=&quot;#第1阶段&quot; class=&quot;headerlink&quot; title=&quot;第1阶段&quot;&gt;&lt;/a&gt;第1阶段&lt;/h3&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="EZVPN" scheme="http://nbma.info/tags/EZVPN/"/>
    
  </entry>
  
  <entry>
    <title>GETVPN介绍及配置</title>
    <link href="http://nbma.info/getvpn/"/>
    <id>http://nbma.info/getvpn/</id>
    <published>2018-05-09T08:47:30.000Z</published>
    <updated>2019-01-12T02:07:44.044Z</updated>
    
    <content type="html"><![CDATA[<p>Group Encrypted Transport VPN，思科私有技术<br>用于内网（全局可路由）加密的VPN，不是互联网VPN（peer无法直接路由）<br>目前的场景是用于加密MPLS VPN，因为MPLS本身只是加标签，并没有加密</p><span id="more"></span><h2 id="封装格式"><a href="#封装格式" class="headerlink" title="封装格式"></a>封装格式</h2><p>copy原始IP头部，然后内部用ESP加密IP数据报文，不影响QoS</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+----------—+—-------+--------------+</span><br><span class="line">| 原始IP头部 | esp头部 | 加密原始IP报文 |</span><br><span class="line">+-----------+--------+--------------+</span><br></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>组成员Group Member向密钥服务器Key Server注册，KS上配置策略，产生一个ipsec sa，向同一组的GM推送sa和感兴趣流。<br>组内成员可以实现any-to-any通讯，支持单播和组播</p><p><strong>KS</strong>：验证组成员，管理安全策略，产生组密钥，分发策略和密钥，并不能加解密数据<br><strong>GM</strong>：加密设备，组播参与者，在安全和不安全区域执行路由。<br><em>GETVPN最好有组播环境，这样KS只向一个组播地址分发即可。</em><br><strong>GDOI</strong>: Group Domain of Interpretation 公有协议，用于KS和GM之间通讯，和其他厂商兼容，UDP848</p><p><strong>KSCP</strong>: Cooperative Protocol 协作协议，思科私有，用于主KS和备份KS通讯</p><h3 id="协商过程"><a href="#协商过程" class="headerlink" title="协商过程"></a>协商过程</h3><p><strong>GM  &lt;—-&gt;  KS</strong>：ike第一阶段协商，验证GM，6个包工作在UDP848，不是UDP500，生成IKE SA<br><strong>GM  ——&gt;  KS</strong>：使用ike sa加密，提供group ID<br><strong>GM  &lt;——  KS**：使用ike sa加密，发送安全策略 .<br>**GM  ——&gt;  KS</strong>：使用ike sa加密，确认<br><strong>GM  &lt;——  KS</strong>：使用ike sa加密，发送TEK,KEK<br><strong>…..</strong><br><strong>GM  &lt;——  KS</strong>：使用KEK加密，周期更新密钥,rekey sa的密钥<br><strong>…..</strong></p><p>TKE 用于GM之间加密,ipsec sa的密钥</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="KS配置"><a href="#KS配置" class="headerlink" title="KS配置"></a>KS配置</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成rsa密钥，用于前面rekey,</span></span><br><span class="line">ip domain name nbma.info</span><br><span class="line">crypto key gemerate ras label GETVPN_KEY modulus <span class="number">1024</span> exportable</span><br><span class="line"></span><br><span class="line"><span class="comment">#ike第一阶段，所有ks和gm的预共享密钥</span></span><br><span class="line">crypto isakmp policy <span class="number">10</span></span><br><span class="line"> authentication pre-share</span><br><span class="line">crypto isakmp key PRE-KEY address <span class="number">10.1</span>.1.1</span><br><span class="line">crypto isakmp key PRE-KEY address <span class="number">10.1</span>.1.2</span><br><span class="line">crypto isakmp key PRE-KEY address <span class="number">10.1</span>.1.254</span><br><span class="line"></span><br><span class="line"><span class="comment">#感兴趣流</span></span><br><span class="line">ip access-<span class="built_in">list</span> ex GETVPN_traffic</span><br><span class="line"> primit ip <span class="number">10.1</span>.0.0 <span class="number">0.0</span>.255.255 <span class="number">10.1</span>.0.0 <span class="number">0.0</span>.255.255</span><br><span class="line"><span class="comment">#rekey更新流量</span></span><br><span class="line">ip access-<span class="built_in">list</span> ex GETVPN_muiltucast</span><br><span class="line"> primit udp host <span class="number">10.1</span>.1.1 eq <span class="number">848</span> host <span class="number">239.1</span>.1.1 eq <span class="number">848</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义转换集和profile</span></span><br><span class="line">crypto ipsec transform-set TRANS esp-<span class="number">3</span>des esp-md5-hmac</span><br><span class="line">crypto ipsec profile IPSPROF</span><br><span class="line"> set transform-set TRANS</span><br><span class="line"></span><br><span class="line"><span class="comment">#GDOI组，组名本地有效</span></span><br><span class="line">crypto gdoi group GDOI_GROUP</span><br><span class="line"> <span class="comment">#所有的KS,GM的id要一致</span></span><br><span class="line"> identity number <span class="number">66666</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#指定本地作为KS服务器</span></span><br><span class="line"> server local</span><br><span class="line">  address ipv4 <span class="number">10.1</span>.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定rsa用于签名</span></span><br><span class="line">  rekey authentication mypubkey rsa GETVPN_KEY</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果用单播rekey还需要敲：rekey transport unicast</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#对rekey的加密算法（可选，默认3des）</span></span><br><span class="line">  rekey algorithm aes <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#rekey更新流量</span></span><br><span class="line">  rekey address ipv4 GETVPN_muiltucast</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置ipsec sa </span></span><br><span class="line">  sa ipsec <span class="number">1</span></span><br><span class="line">   match address ipv4 GETVPN_traffic</span><br><span class="line">   profile IPSPROF</span><br><span class="line">   reply time windows-size <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="GM配置"><a href="#GM配置" class="headerlink" title="GM配置"></a>GM配置</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">crypto isakmp policy <span class="number">10</span></span><br><span class="line"> authentication pre-share</span><br><span class="line"></span><br><span class="line"><span class="comment">#只需要配置主备ks的预共享密钥</span></span><br><span class="line">crypto isakmp key PRE-KEY address <span class="number">10.1</span>.1.1</span><br><span class="line">crypto isakmp key PRE-KEY address <span class="number">10.1</span>.1.2</span><br><span class="line"></span><br><span class="line">crypto gdoi group GDOI-GROUP</span><br><span class="line"> identity number <span class="number">66666</span></span><br><span class="line"> server address ipv4 <span class="number">10.1</span>.1.1</span><br><span class="line"> server address ipv4 <span class="number">10.1</span>.1.2</span><br><span class="line"></span><br><span class="line">crypto map GDOI-MAP <span class="number">10</span> gdoi</span><br><span class="line"> set group GDOI-GROUP</span><br><span class="line"></span><br><span class="line">inerface e0/<span class="number">0</span></span><br><span class="line"> crypto map GDOI-MAP</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在ks上查看GM注册信息</span></span><br><span class="line">show crypto gdoi ks member </span><br><span class="line"></span><br><span class="line"><span class="comment">#在gm上查看gdoi</span></span><br><span class="line">show crypto gdoi</span><br><span class="line"></span><br><span class="line"><span class="comment">#在GM上设置bypass流量，只能deny</span></span><br><span class="line">ip access-<span class="built_in">list</span> external GM-ACL</span><br><span class="line"> deny ip <span class="number">10.1</span>.0.0 <span class="number">0.0</span>.255.255 <span class="number">10.1</span>.2.0 <span class="number">0.0</span>.0.255</span><br><span class="line">crypto map GDOI-MAP <span class="number">10</span> gdoi</span><br><span class="line"> match address GM-ACL</span><br></pre></td></tr></table></figure><h3 id="主备KS配置"><a href="#主备KS配置" class="headerlink" title="主备KS配置"></a>主备KS配置</h3><p>手动同步。手敲相同的配置，包括rsa密钥对，感兴趣流，转换及，ipsec sa的lifetime</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在KS1上</span></span><br><span class="line">crypto gdoi group GDOI_GROUP</span><br><span class="line"> server local</span><br><span class="line">  redundancy</span><br><span class="line">   peer address ipv4 <span class="number">10.1</span>.1.2</span><br><span class="line">   local priority <span class="number">100</span>(越大越优先)</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出KS1的key </span></span><br><span class="line">crypto key export rsa GETVPN_KEY pem terminal <span class="number">3</span>des csico123</span><br><span class="line"></span><br><span class="line"><span class="comment">#在KS2上导入密钥</span></span><br><span class="line">crypto key import rsa GETVPN_KEY pem terminal <span class="number">3</span>des csico123</span><br><span class="line">复制公钥</span><br><span class="line">复制私钥</span><br><span class="line">quit </span><br><span class="line"></span><br><span class="line"><span class="comment">#（策略-略）</span></span><br><span class="line"></span><br><span class="line">crypto gdoi group GDOI_GROUP</span><br><span class="line"> server local</span><br><span class="line">  redundancy</span><br><span class="line">   peer address ipv4 <span class="number">10.1</span>.1.1</span><br><span class="line">   local priority <span class="number">75</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Group Encrypted Transport VPN，思科私有技术&lt;br&gt;用于内网（全局可路由）加密的VPN，不是互联网VPN（peer无法直接路由）&lt;br&gt;目前的场景是用于加密MPLS VPN，因为MPLS本身只是加标签，并没有加密&lt;/p&gt;</summary>
    
    
    
    <category term="技术笔记" scheme="http://nbma.info/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="network" scheme="http://nbma.info/tags/network/"/>
    
    <category term="GETVPN" scheme="http://nbma.info/tags/GETVPN/"/>
    
  </entry>
  
</feed>
